components:
  schemas:
    AudioEffect:
      description: An audioeffect represents a single effect in a chain of effects
        to be applied to a source. Properties on the audioeffect control how and what
        is rendered in the effect.
      properties:
        bypassed:
          $ref: '#/components/schemas/BooleanParameter'
        id:
          description: The unique id of the audio effect instance
          format: int64
          readOnly: true
          type: integer
        name:
          description: The name of the effect
          example: Distortion
          type: string
        params:
          $ref: '#/components/schemas/ParameterCollection'
      type: object
    AudioFileInfo:
      description: Meta information for an audio file
      nullable: true
      properties:
        bpm:
          description: Bpm rate expressed in beats
          example: 0
          format: double
          type: number
        duration:
          description: Duration of file expressed as hours:seconds:minutes:milliseconds
          example: '00:12:08.085'
          type: string
        duration_ms:
          description: Duration of file expressed as milliseconds
          example: 728084.8979591837
          format: double
          type: number
        exists:
          description: Whether file is actully present on disk at the given location
          example: true
          type: boolean
        num_channels:
          description: Number of audio channels
          example: 2
          format: int32
          type: integer
        path:
          description: The location of the file on disk
          example: /Users/Resolume/Music/Track1.wav
          type: string
        sample_rate:
          description: Sample rate expressed in Hertz
          example: 44100
          format: double
          type: number
      readOnly: true
      type: object
    AudioTrack:
      description: An audio track, as part of a clip,layer,group or a composition
      nullable: true
      properties:
        effects:
          description: All the effects that may be applied when the audio track is
            played
          items:
            $ref: '#/components/schemas/AudioEffect'
          type: array
        pan:
          $ref: '#/components/schemas/RangeParameter'
        volume:
          $ref: '#/components/schemas/RangeParameter'
      type: object
    AudioTrackClip:
      allOf:
      - $ref: '#/components/schemas/AudioTrack'
      - properties:
          description:
            description: The description of the source belonging to this audio track
            type: string
          fileinfo:
            $ref: '#/components/schemas/AudioFileInfo'
        type: object
    AutoPilot:
      description: AutoPilot options to control automatic clip transitions
      nullable: true
      properties:
        target:
          $ref: '#/components/schemas/ChoiceParameter'
      type: object
    BooleanParameter:
      description: A parameter containing a true or false value
      properties:
        id:
          description: The unique identifier of the parameter
          example: 1648023491239
          format: int64
          type: integer
        value:
          description: The value for the parameter
          type: boolean
        valuetype:
          description: The parameter type. This is "ParamBoolean" for this type
          example: ParamBoolean
          type: string
        view:
          $ref: '#/components/schemas/ParameterView'
      type: object
    ChoiceParameter:
      description: A multiple-choice parameter
      properties:
        id:
          description: The unique identifier of the parameter
          example: 1673448923421
          format: int64
          type: integer
        index:
          description: The index of the selected option within the options
          example: 0
          format: int32
          type: integer
        options:
          description: The list of available options for the parameter
          example:
          - Option 1
          - Option 2
          - Option 3
          items:
            type: string
          type: array
        value:
          description: The value of the selected option
          example: Option 1
          type: string
        valuetype:
          description: The parameter type. This is "ParamChoice" or "ParamState" for
            this type
          example: ParamChoice
          type: string
        view:
          $ref: '#/components/schemas/ParameterView'
      type: object
    Clip:
      description: A single clip in the composition, which may contain a video and/or
        audio track
      properties:
        audio:
          $ref: '#/components/schemas/AudioTrackClip'
        beatsnap:
          $ref: '#/components/schemas/ChoiceParameter'
        colorid:
          $ref: '#/components/schemas/ChoiceParameter'
        connected:
          allOf:
          - $ref: '#/components/schemas/ChoiceParameter'
          description: Get whether the clip is currently connected.
          readOnly: true
        dashboard:
          $ref: '#/components/schemas/ParameterCollection'
        faderstart:
          $ref: '#/components/schemas/ChoiceParameter'
        id:
          description: The unique id of the clip
          example: 1641549604745
          format: int64
          readOnly: true
          type: integer
        ignorecolumntrigger:
          $ref: '#/components/schemas/ChoiceParameter'
        name:
          $ref: '#/components/schemas/StringParameter'
        selected:
          allOf:
          - $ref: '#/components/schemas/BooleanParameter'
          description: Get whether the clip is currently selected. If a clip is selected
            the properties will show up in Arena or Avenue and in the example react
            application.
          readOnly: true
        target:
          $ref: '#/components/schemas/ChoiceParameter'
        thumbnail:
          description: The thumbnail properties contain information with the latest
            update to the thumbnail, the size (in bytes) and whether it contains the
            'default' thumbnail, meaning it doesn't contain a video or audio track
          properties:
            is_default:
              description: Get whether this is a default thumbnail, shared between
                all clips that don't have any video or audio tracks
              example: true
              type: boolean
            last_update:
              description: The timestamp of the last update, in milliseconds. Given
                as a string to prevent lesser languages from truncating the value
              example: '0'
              type: string
            size:
              description: The number of bytes of data in the thumbnail
              example: 1048576
              format: int64
              type: integer
          readOnly: true
          type: object
        transport:
          description: Only Timeline and BPM Sync transport types are supported at
            the moment
          oneOf:
          - $ref: '#/components/schemas/TransportTimeline'
          - $ref: '#/components/schemas/TransportBPMSync'
        transporttype:
          $ref: '#/components/schemas/ChoiceParameter'
        triggerstyle:
          $ref: '#/components/schemas/ChoiceParameter'
        video:
          $ref: '#/components/schemas/VideoTrackClip'
      type: object
    ColorParameter:
      description: A parameter containing color data
      properties:
        id:
          description: The unique identifier of the parameter
          example: 1682459812085
          format: int64
          type: integer
        palette:
          description: Array of colors
          example:
          - '#ffffff'
          - '#ff00ff'
          - '#000'
          items:
            type: string
          type: array
        value:
          description: The color value. This always starts with a '#', followed by
            a number of hexadecimal values representing rgb and - optionally - the
            alpha channel. Each channel may be either represented by a single character
            - in which case the values are from 0 to 15 - or by two characters - allowing
            a range from 0 to 255 per channel.
          example: '#ffffff'
          type: string
        valuetype:
          description: The parameter type. This is "ParamColor" for this type
          example: ParamColor
          type: string
        view:
          $ref: '#/components/schemas/ParameterView'
      type: object
    Column:
      description: A column within a deck
      properties:
        colorid:
          $ref: '#/components/schemas/ChoiceParameter'
        connected:
          allOf:
          - $ref: '#/components/schemas/ChoiceParameter'
          description: Get whether the column is currently connected
          readOnly: true
        id:
          description: The unique identifier of the column
          example: 1641549605447
          format: int64
          readOnly: true
          type: integer
        name:
          $ref: '#/components/schemas/StringParameter'
        selected:
          allOf:
          - $ref: '#/components/schemas/BooleanParameter'
          description: Get whether the column is currently selected
          readOnly: true
      type: object
    Composition:
      description: The complete composition, containing all the decks, layers, clips
        and their effects
      properties:
        audio:
          $ref: '#/components/schemas/AudioTrack'
        bypassed:
          $ref: '#/components/schemas/BooleanParameter'
        clipbeatsnap:
          $ref: '#/components/schemas/ChoiceParameter'
        cliptarget:
          $ref: '#/components/schemas/ChoiceParameter'
        cliptriggerstyle:
          $ref: '#/components/schemas/ChoiceParameter'
        columns:
          description: All columns in the composition
          items:
            $ref: '#/components/schemas/Column'
          type: array
        crossfader:
          $ref: '#/components/schemas/CrossFader'
        dashboard:
          $ref: '#/components/schemas/ParameterCollection'
        decks:
          description: All decks in the composition
          items:
            $ref: '#/components/schemas/Deck'
          type: array
        layergroups:
          description: All layergroups in the composition
          items:
            $ref: '#/components/schemas/LayerGroup'
          type: array
        layers:
          description: All layers in the composition
          items:
            $ref: '#/components/schemas/Layer'
          type: array
        master:
          $ref: '#/components/schemas/RangeParameter'
        name:
          $ref: '#/components/schemas/StringParameter'
        selected:
          allOf:
          - $ref: '#/components/schemas/BooleanParameter'
          - readOnly: true
        speed:
          $ref: '#/components/schemas/RangeParameter'
        tempo_controller:
          $ref: '#/components/schemas/TempoController'
        video:
          $ref: '#/components/schemas/VideoTrack'
      type: object
    CrossFader:
      description: Cross fade between two clips
      nullable: false
      properties:
        behaviour:
          $ref: '#/components/schemas/ChoiceParameter'
        curve:
          $ref: '#/components/schemas/ChoiceParameter'
        id:
          description: The unique identifier of the cross fader
          example: 1
          format: int64
          readOnly: true
          type: integer
        mixer:
          $ref: '#/components/schemas/ParameterCollection'
        phase:
          $ref: '#/components/schemas/RangeParameter'
        sidea:
          $ref: '#/components/schemas/EventParameter'
        sideb:
          $ref: '#/components/schemas/EventParameter'
      type: object
    Deck:
      description: A deck contains a full set of layers and clips. Only the layers
        and clips of the active deck can be retrieved and updated.
      properties:
        closed:
          description: Is this deck closed
          example: false
          readOnly: true
          type: boolean
        colorid:
          $ref: '#/components/schemas/ChoiceParameter'
        id:
          description: The unique identifier of the deck
          example: 1641549604727
          format: int64
          readOnly: true
          type: integer
        name:
          $ref: '#/components/schemas/StringParameter'
        scrollx:
          $ref: '#/components/schemas/IntegerParameter'
        selected:
          allOf:
          - $ref: '#/components/schemas/BooleanParameter'
          description: Get whether the deck is currently selected
          readOnly: true
      type: object
    Effect:
      description: An effect to be used on a clip. layer (group) or the composition
      properties:
        idstring:
          description: The unique identifier for the effect
          example: A139
          type: string
        name:
          description: The descriptive name of the source
          example: Blow
          type: string
        presets:
          description: All the presets for this source
          items:
            properties:
              id:
                description: The unique identifier for the preset
                example: 2026888427
                format: int64
                type: integer
              name:
                description: The name of the preset
                example: Bright Lines
                type: string
            type: object
          type: array
      type: object
    Effects:
      description: The available effects for clips, layer (group)s and the composition
      properties:
        video:
          description: The available video effects
          items:
            $ref: '#/components/schemas/Effect'
          type: array
      type: object
    EventParameter:
      description: A parameter that handles events, but does not contain a value
      properties:
        id:
          description: The unique identifier of the parameter
          example: 1865335878211
          format: int64
          readOnly: true
          type: integer
        valuetype:
          description: The parameter type. This is "ParamEvent" for this type
          example: ParamEvent
          readOnly: true
          type: string
        view:
          $ref: '#/components/schemas/ParameterView'
      type: object
    FrameRate:
      description: Frame rate expressed as ratio
      properties:
        denom:
          description: Denominator
          example: 1001
          format: int32
          type: integer
        num:
          description: Numerator
          example: 24000
          format: int32
          type: integer
      readOnly: true
      type: object
    IntegerParameter:
      description: A parameter containing numeric data
      properties:
        id:
          description: The unique identifier of the parameter
          example: 1723491095783
          format: int64
          type: integer
        value:
          description: The value for the parameter
          example: 100
          format: int64
          type: integer
        valuetype:
          description: The parameter type. This is "ParamNumber" for this type
          example: ParamNumber
          type: string
        view:
          $ref: '#/components/schemas/ParameterView'
      type: object
    Layer:
      description: A layer is a container for clips that has its own dashboard and
        can be selected
      properties:
        audio:
          $ref: '#/components/schemas/AudioTrack'
        autopilot:
          $ref: '#/components/schemas/AutoPilot'
        bypassed:
          $ref: '#/components/schemas/BooleanParameter'
        clips:
          description: All clips belonging to this layer
          items:
            $ref: '#/components/schemas/Clip'
          type: array
        colorid:
          $ref: '#/components/schemas/ChoiceParameter'
        crossfadergroup:
          $ref: '#/components/schemas/ChoiceParameter'
        dashboard:
          $ref: '#/components/schemas/ParameterCollection'
        faderstart:
          $ref: '#/components/schemas/BooleanParameter'
        id:
          description: The unique id for the layer
          example: 1641549604807
          format: int64
          readOnly: true
          type: integer
        ignorecolumntrigger:
          $ref: '#/components/schemas/BooleanParameter'
        maskmode:
          $ref: '#/components/schemas/ChoiceParameter'
        master:
          $ref: '#/components/schemas/RangeParameter'
        name:
          $ref: '#/components/schemas/StringParameter'
        selected:
          allOf:
          - $ref: '#/components/schemas/BooleanParameter'
          description: Get whether the layer is currently selected
          readOnly: true
        solo:
          $ref: '#/components/schemas/BooleanParameter'
        transition:
          $ref: '#/components/schemas/LayerTransition'
        video:
          $ref: '#/components/schemas/VideoTrackLayer'
      type: object
    LayerGroup:
      description: A collection of layers, allowing controlling of a group of layers
        as a single object
      properties:
        audio:
          $ref: '#/components/schemas/AudioTrack'
        bypassed:
          $ref: '#/components/schemas/BooleanParameter'
        colorid:
          $ref: '#/components/schemas/ChoiceParameter'
        crossfadergroup:
          $ref: '#/components/schemas/ChoiceParameter'
        dashboard:
          $ref: '#/components/schemas/ParameterCollection'
        id:
          description: The unique id for the layer group
          example: 1641549604808
          format: int64
          readOnly: true
          type: integer
        ignorecolumntrigger:
          $ref: '#/components/schemas/BooleanParameter'
        layers:
          description: All the layers added to the layer group
          items:
            $ref: '#/components/schemas/Layer'
          type: array
        master:
          $ref: '#/components/schemas/RangeParameter'
        name:
          $ref: '#/components/schemas/StringParameter'
        selected:
          allOf:
          - $ref: '#/components/schemas/BooleanParameter'
          description: Get whether the layer group is currently selected
          readOnly: true
        solo:
          $ref: '#/components/schemas/BooleanParameter'
        speed:
          $ref: '#/components/schemas/RangeParameter'
        video:
          $ref: '#/components/schemas/VideoTrack'
      type: object
    LayerTransition:
      description: A layer transition describes the transition between clips within
        the layer
      properties:
        blend_mode:
          $ref: '#/components/schemas/ChoiceParameter'
        duration:
          $ref: '#/components/schemas/RangeParameter'
      type: object
    ParameterCollection:
      additionalProperties:
        oneOf:
        - $ref: '#/components/schemas/StringParameter'
        - $ref: '#/components/schemas/TextParameter'
        - $ref: '#/components/schemas/BooleanParameter'
        - $ref: '#/components/schemas/IntegerParameter'
        - $ref: '#/components/schemas/ColorParameter'
        - $ref: '#/components/schemas/RangeParameter'
        - $ref: '#/components/schemas/ChoiceParameter'
      description: An unstructured collection of parameters. Parameters are presented
        as a map where the key is the name of the parameter and the value is the parameter
        itself. Parameters may be any valid parameter type.
      type: object
    ParameterView:
      description: Semantic information on the parameter, contains hints about how
        best to display the parameter
      properties:
        control_type:
          description: Which control to show for the parameter
          enum:
          - based_on_param
          - choice_buttons
          - choice_combobox
          - spinner
          - duration_spinner
          - slider
          - slider_color_red
          - slider_color_green
          - slider_color_blue
          - slider_color_hue
          - slider_color_saturation
          - slider_color_brightness
          - slider_color_alpha
          - slider_color_opacity
          - color_pallette
          - color_picker
          - rotary
          - text
          - text_multiline
          type: string
        display_units:
          description: Which units to display.
          enum:
          - real
          - integer
          - percent
          - degrees
          - decibels
          - frames_per_second
          - milliseconds
          - seconds
          - beats
          - fractions
          type: string
        multiplier:
          description: Value to multiply with when displaying value. For a parameter
            with a value between 0 and 1 should display as 0 to 100
          example: 1.0
          format: double
          type: number
        step:
          description: Value increments to be used for e.g. sliding or rotary controls
          example: 1.0
          format: double
          type: number
        suffix:
          description: The suffix to display for the variable. May be empty
          example: '%'
          type: string
      readOnly: true
      type: object
    ProductInfo:
      description: Generic information about the product serving the api
      properties:
        major:
          description: The major version number of the Arena or Avenue instance handling
            the request.
          example: 7
          format: int64
          type: integer
        micro:
          description: The micro version number of the Arena or Avenue instance handling
            the request.
          example: 0
          format: int64
          type: integer
        minor:
          description: The minor version number of the Arena or Avenue instance handling
            the request.
          example: 8
          format: int64
          type: integer
        name:
          description: The product name. This is either 'Arena' or 'Avenue'
          example: Arena
          type: string
        revision:
          description: The revision of the Arena or Avenue instance handling the request.
          format: int64
          type: integer
      type: object
    RangeParameter:
      description: A parameter containing a floating-point value with a minimum and
        maximum allowed value.
      properties:
        id:
          description: The unique identifier of the parameter
          example: 1824357891293
          format: int64
          type: integer
        in:
          description: The lowest value we clamped the range to, inclusive
          example: 25.0
          format: double
          type: number
        max:
          description: The highest allowed value for the parameter, inclusive
          example: 100.0
          format: double
          type: number
        min:
          description: The lowest allowed value for the parameter, inclusive
          example: 0.0
          format: double
          type: number
        out:
          description: The highest value we clamped the range to, inclusive
          example: 75.0
          format: double
          type: number
        value:
          description: The value for the parameter
          example: 50.0
          format: double
          type: number
        valuetype:
          description: The parameter type. This is "ParamRange" for this type
          example: ParamRange
          type: string
        view:
          $ref: '#/components/schemas/ParameterView'
      type: object
    ResetParameter:
      description: Options for resetting a parameter, should only the value be reset,
        or should animations also be reset
      properties:
        resetanimation:
          description: If set to true, animations are also reset
          type: boolean
      type: object
    Source:
      description: A source to be used in a clip
      properties:
        idstring:
          description: The unique identifier for the source
          example: A401
          type: string
        name:
          description: The descriptive name of the source
          example: Gradient
          type: string
        presets:
          description: All the presets for this source
          items:
            properties:
              id:
                description: The unique identifier for the preset
                example: 2026883901
                format: int64
                type: integer
              name:
                description: The name of the preset
                example: Dutch Sky
                type: string
            type: object
          type: array
      type: object
    Sources:
      description: The available sources for clips
      properties:
        video:
          description: The available video sources
          items:
            $ref: '#/components/schemas/Source'
          type: array
      type: object
    StringParameter:
      description: A parameter containing string data
      properties:
        id:
          description: The unique identifier of the parameter
          example: 1641335430527
          format: int64
          type: integer
        value:
          description: The value for the parameter
          type: string
        valuetype:
          description: The parameter type. This is "ParamString" for this type
          example: ParamString
          type: string
        view:
          $ref: '#/components/schemas/ParameterView'
      type: object
    TempoController:
      description: The controller for various tempo-related aspects of the composition
      properties:
        resync:
          $ref: '#/components/schemas/EventParameter'
        tempo:
          $ref: '#/components/schemas/RangeParameter'
        tempo_pull:
          $ref: '#/components/schemas/EventParameter'
        tempo_push:
          $ref: '#/components/schemas/EventParameter'
        tempo_tap:
          $ref: '#/components/schemas/EventParameter'
      type: object
    TextParameter:
      description: A parameter containing string data, possibly multiline
      properties:
        id:
          description: The unique identifier of the parameter
          example: 1638334400287
          format: int64
          type: integer
        value:
          description: The value for the parameter
          example: 'Some

            Multiline

            String

            '
        valuetype:
          description: The parameter type. This is "ParamText" for this type
          example: ParamText
          type: string
        view:
          $ref: '#/components/schemas/ParameterView'
      type: object
    TransportBPMSync:
      description: The timeline transport controls
      nullable: true
      properties:
        controls:
          description: BPM Sync controls
          nullable: false
          properties:
            beatloop:
              $ref: '#/components/schemas/ChoiceParameter'
            bpm:
              $ref: '#/components/schemas/RangeParameter'
            duration:
              $ref: '#/components/schemas/RangeParameter'
            playdirection:
              $ref: '#/components/schemas/ChoiceParameter'
            playmode:
              $ref: '#/components/schemas/ChoiceParameter'
            playmodeaway:
              $ref: '#/components/schemas/ChoiceParameter'
            speed:
              $ref: '#/components/schemas/RangeParameter'
            syncmode:
              $ref: '#/components/schemas/ChoiceParameter'
          type: object
        position:
          $ref: '#/components/schemas/RangeParameter'
      type: object
    TransportTimeline:
      description: The timeline transport controls
      nullable: true
      properties:
        controls:
          description: Timeline controls
          nullable: false
          properties:
            duration:
              $ref: '#/components/schemas/RangeParameter'
            playdirection:
              $ref: '#/components/schemas/ChoiceParameter'
            playmode:
              $ref: '#/components/schemas/ChoiceParameter'
            playmodeaway:
              $ref: '#/components/schemas/ChoiceParameter'
            speed:
              $ref: '#/components/schemas/RangeParameter'
          type: object
        position:
          $ref: '#/components/schemas/RangeParameter'
      type: object
    VideoEffect:
      description: A videoeffect represents a single effect in a chain of effects
        to be applied to a source. Properties on the videoeffect control how and what
        is rendered in the effect.
      properties:
        bypassed:
          allOf:
          - $ref: '#/components/schemas/BooleanParameter'
          - description: Bypassed param is not always available, primary Transform
              for example is not allowed to by bypassed
          - nullable: true
        display_name:
          description: The name to show the user
          example: ChromaKey
          type: string
        effect:
          $ref: '#/components/schemas/ParameterCollection'
        id:
          description: The unique id of the video effect instance
          example: 1723069642348
          format: int64
          readOnly: true
          type: integer
        mixer:
          $ref: '#/components/schemas/ParameterCollection'
        name:
          description: The unique name of the key
          example: ChromaKey
          type: string
        params:
          $ref: '#/components/schemas/ParameterCollection'
      type: object
    VideoFileInfo:
      description: Meta information for a video file
      nullable: true
      properties:
        duration:
          description: Duration of file expressed as hours:seconds:minutes:milliseconds
          example: '00:00:19.06'
          type: string
        duration_ms:
          description: Duration of file expressed as milliseconds
          example: 19269.249999999996
          format: double
          readOnly: true
          type: number
        exists:
          description: Whether file is actually present on disk at the given location
          example: true
          type: boolean
        framerate:
          $ref: '#/components/schemas/FrameRate'
        height:
          description: The number of pixels the video is high
          example: 1080
          format: int32
          type: integer
        path:
          description: The location of the file on disk
          example: /Users/Resolume/Videos/Clip1.mov
          type: string
        width:
          description: The number of pixels the video is wide
          example: 1920
          format: int32
          type: integer
      readOnly: true
      type: object
    VideoTrack:
      description: A video track, as part of a clip,layer,group or a composition
      nullable: true
      properties:
        effects:
          description: All the effects that may be applied when the video track is
            played
          items:
            $ref: '#/components/schemas/VideoEffect'
          type: array
        height:
          $ref: '#/components/schemas/RangeParameter'
        mixer:
          $ref: '#/components/schemas/ParameterCollection'
        opacity:
          $ref: '#/components/schemas/RangeParameter'
        width:
          $ref: '#/components/schemas/RangeParameter'
      type: object
    VideoTrackClip:
      allOf:
      - $ref: '#/components/schemas/VideoTrack'
      - properties:
          a:
            $ref: '#/components/schemas/BooleanParameter'
          b:
            $ref: '#/components/schemas/BooleanParameter'
          description:
            description: The description of the source belonging to this video track
            example: Clip1.mov\nDXV 3.0 Normal Quality, With Alpha, 1920x1080, 23.98
              Fps\r\n00:00:19.269
            type: string
          fileinfo:
            $ref: '#/components/schemas/VideoFileInfo'
          g:
            $ref: '#/components/schemas/BooleanParameter'
          r:
            $ref: '#/components/schemas/BooleanParameter'
          resize:
            $ref: '#/components/schemas/ChoiceParameter'
          sourceparams:
            allOf:
            - $ref: '#/components/schemas/ParameterCollection'
            - description: Additional params for source of the clip
            - nullable: true
        type: object
    VideoTrackLayer:
      allOf:
      - $ref: '#/components/schemas/VideoTrack'
      - properties:
          autosize:
            $ref: '#/components/schemas/ChoiceParameter'
        type: object
info:
  title: Resolume Arena API
  version: 1.0.0
openapi: 3.0.3
paths: {}
