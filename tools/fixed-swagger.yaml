components:
  schemas:
    AudioEffect:
      description: An audioeffect represents a single effect in a chain of effects
        to be applied to a source. Properties on the audioeffect control how and what
        is rendered in the effect.
      properties:
        bypassed:
          $ref: '#/components/schemas/BooleanParameter'
        id:
          description: The unique id of the audio effect instance
          format: int64
          readOnly: true
          type: integer
        name:
          description: The name of the effect
          example: Distortion
          type: string
        params:
          $ref: '#/components/schemas/ParameterCollection'
      type: object
    AudioFileInfo:
      description: Meta information for an audio file
      nullable: true
      properties:
        bpm:
          description: Bpm rate expressed in beats
          example: 0
          format: double
          type: number
        duration:
          description: Duration of file expressed as hours:seconds:minutes:milliseconds
          example: '00:12:08.085'
          type: string
        duration_ms:
          description: Duration of file expressed as milliseconds
          example: 728084.8979591837
          format: double
          type: number
        exists:
          description: Whether file is actully present on disk at the given location
          example: true
          type: boolean
        num_channels:
          description: Number of audio channels
          example: 2
          format: int32
          type: integer
        path:
          description: The location of the file on disk
          example: /Users/Resolume/Music/Track1.wav
          type: string
        sample_rate:
          description: Sample rate expressed in Hertz
          example: 44100
          format: double
          type: number
      readOnly: true
      type: object
    AudioTrack:
      description: An audio track, as part of a clip,layer,group or a composition
      nullable: true
      properties:
        effects:
          description: All the effects that may be applied when the audio track is
            played
          items:
            $ref: '#/components/schemas/AudioEffect'
          type: array
        pan:
          $ref: '#/components/schemas/RangeParameter'
        volume:
          $ref: '#/components/schemas/RangeParameter'
      type: object
    AudioTrackClip:
      allOf:
      - $ref: '#/components/schemas/AudioTrack'
      - properties:
          description:
            description: The description of the source belonging to this audio track
            type: string
          fileinfo:
            $ref: '#/components/schemas/AudioFileInfo'
        type: object
    AutoPilot:
      description: AutoPilot options to control automatic clip transitions
      nullable: true
      properties:
        target:
          $ref: '#/components/schemas/ChoiceParameter'
      type: object
    BooleanParameter:
      description: A parameter containing a true or false value
      properties:
        id:
          description: The unique identifier of the parameter
          example: 1648023491239
          format: int64
          type: integer
        value:
          description: The value for the parameter
          type: boolean
        valuetype:
          description: The parameter type. This is "ParamBoolean" for this type
          example: ParamBoolean
          type: string
        view:
          $ref: '#/components/schemas/ParameterView'
      type: object
    ChoiceParameter:
      description: A multiple-choice parameter
      properties:
        id:
          description: The unique identifier of the parameter
          example: 1673448923421
          format: int64
          type: integer
        index:
          description: The index of the selected option within the options
          example: 0
          format: int32
          type: integer
        options:
          description: The list of available options for the parameter
          example:
          - Option 1
          - Option 2
          - Option 3
          items:
            type: string
          type: array
        value:
          description: The value of the selected option
          example: Option 1
          type: string
        valuetype:
          description: The parameter type. This is "ParamChoice" or "ParamState" for
            this type
          example: ParamChoice
          type: string
        view:
          $ref: '#/components/schemas/ParameterView'
      type: object
    Clip:
      description: A single clip in the composition, which may contain a video and/or
        audio track
      properties:
        audio:
          $ref: '#/components/schemas/AudioTrackClip'
        beatsnap:
          $ref: '#/components/schemas/ChoiceParameter'
        colorid:
          $ref: '#/components/schemas/ChoiceParameter'
        connected:
          allOf:
          - $ref: '#/components/schemas/ChoiceParameter'
          description: Get whether the clip is currently connected.
          readOnly: true
        dashboard:
          $ref: '#/components/schemas/ParameterCollection'
        faderstart:
          $ref: '#/components/schemas/ChoiceParameter'
        id:
          description: The unique id of the clip
          example: 1641549604745
          format: int64
          readOnly: true
          type: integer
        ignorecolumntrigger:
          $ref: '#/components/schemas/ChoiceParameter'
        name:
          $ref: '#/components/schemas/StringParameter'
        selected:
          allOf:
          - $ref: '#/components/schemas/BooleanParameter'
          description: Get whether the clip is currently selected. If a clip is selected
            the properties will show up in Arena or Avenue and in the example react
            application.
          readOnly: true
        target:
          $ref: '#/components/schemas/ChoiceParameter'
        thumbnail:
          description: The thumbnail properties contain information with the latest
            update to the thumbnail, the size (in bytes) and whether it contains the
            'default' thumbnail, meaning it doesn't contain a video or audio track
          properties:
            is_default:
              description: Get whether this is a default thumbnail, shared between
                all clips that don't have any video or audio tracks
              example: true
              type: boolean
            last_update:
              description: The timestamp of the last update, in milliseconds. Given
                as a string to prevent lesser languages from truncating the value
              example: '0'
              type: string
            size:
              description: The number of bytes of data in the thumbnail
              example: 1048576
              format: int64
              type: integer
          readOnly: true
          type: object
        transport:
          description: Only Timeline and BPM Sync transport types are supported at
            the moment
          oneOf:
          - $ref: '#/components/schemas/TransportTimeline'
          - $ref: '#/components/schemas/TransportBPMSync'
        transporttype:
          $ref: '#/components/schemas/ChoiceParameter'
        triggerstyle:
          $ref: '#/components/schemas/ChoiceParameter'
        video:
          $ref: '#/components/schemas/VideoTrackClip'
      type: object
    ColorParameter:
      description: A parameter containing color data
      properties:
        id:
          description: The unique identifier of the parameter
          example: 1682459812085
          format: int64
          type: integer
        palette:
          description: Array of colors
          example:
          - '#ffffff'
          - '#ff00ff'
          - '#000'
          items:
            type: string
          type: array
        value:
          description: The color value. This always starts with a '#', followed by
            a number of hexadecimal values representing rgb and - optionally - the
            alpha channel. Each channel may be either represented by a single character
            - in which case the values are from 0 to 15 - or by two characters - allowing
            a range from 0 to 255 per channel.
          example: '#ffffff'
          type: string
        valuetype:
          description: The parameter type. This is "ParamColor" for this type
          example: ParamColor
          type: string
        view:
          $ref: '#/components/schemas/ParameterView'
      type: object
    Column:
      description: A column within a deck
      properties:
        colorid:
          $ref: '#/components/schemas/ChoiceParameter'
        connected:
          allOf:
          - $ref: '#/components/schemas/ChoiceParameter'
          description: Get whether the column is currently connected
          readOnly: true
        id:
          description: The unique identifier of the column
          example: 1641549605447
          format: int64
          readOnly: true
          type: integer
        name:
          $ref: '#/components/schemas/StringParameter'
        selected:
          allOf:
          - $ref: '#/components/schemas/BooleanParameter'
          description: Get whether the column is currently selected
          readOnly: true
      type: object
    Composition:
      description: The complete composition, containing all the decks, layers, clips
        and their effects
      properties:
        audio:
          $ref: '#/components/schemas/AudioTrack'
        bypassed:
          $ref: '#/components/schemas/BooleanParameter'
        clipbeatsnap:
          $ref: '#/components/schemas/ChoiceParameter'
        cliptarget:
          $ref: '#/components/schemas/ChoiceParameter'
        cliptriggerstyle:
          $ref: '#/components/schemas/ChoiceParameter'
        columns:
          description: All columns in the composition
          items:
            $ref: '#/components/schemas/Column'
          type: array
        crossfader:
          $ref: '#/components/schemas/CrossFader'
        dashboard:
          $ref: '#/components/schemas/ParameterCollection'
        decks:
          description: All decks in the composition
          items:
            $ref: '#/components/schemas/Deck'
          type: array
        layergroups:
          description: All layergroups in the composition
          items:
            $ref: '#/components/schemas/LayerGroup'
          type: array
        layers:
          description: All layers in the composition
          items:
            $ref: '#/components/schemas/Layer'
          type: array
        master:
          $ref: '#/components/schemas/RangeParameter'
        name:
          $ref: '#/components/schemas/StringParameter'
        selected:
          allOf:
          - $ref: '#/components/schemas/BooleanParameter'
          - readOnly: true
        speed:
          $ref: '#/components/schemas/RangeParameter'
        tempo_controller:
          $ref: '#/components/schemas/TempoController'
        video:
          $ref: '#/components/schemas/VideoTrack'
      type: object
    CrossFader:
      description: Cross fade between two clips
      nullable: false
      properties:
        behaviour:
          $ref: '#/components/schemas/ChoiceParameter'
        curve:
          $ref: '#/components/schemas/ChoiceParameter'
        id:
          description: The unique identifier of the cross fader
          example: 1
          format: int64
          readOnly: true
          type: integer
        mixer:
          $ref: '#/components/schemas/ParameterCollection'
        phase:
          $ref: '#/components/schemas/RangeParameter'
        sidea:
          $ref: '#/components/schemas/EventParameter'
        sideb:
          $ref: '#/components/schemas/EventParameter'
      type: object
    Deck:
      description: A deck contains a full set of layers and clips. Only the layers
        and clips of the active deck can be retrieved and updated.
      properties:
        closed:
          description: Is this deck closed
          example: false
          readOnly: true
          type: boolean
        colorid:
          $ref: '#/components/schemas/ChoiceParameter'
        id:
          description: The unique identifier of the deck
          example: 1641549604727
          format: int64
          readOnly: true
          type: integer
        name:
          $ref: '#/components/schemas/StringParameter'
        scrollx:
          $ref: '#/components/schemas/IntegerParameter'
        selected:
          allOf:
          - $ref: '#/components/schemas/BooleanParameter'
          description: Get whether the deck is currently selected
          readOnly: true
      type: object
    Effect:
      description: An effect to be used on a clip. layer (group) or the composition
      properties:
        idstring:
          description: The unique identifier for the effect
          example: A139
          type: string
        name:
          description: The descriptive name of the source
          example: Blow
          type: string
        presets:
          description: All the presets for this source
          items:
            properties:
              id:
                description: The unique identifier for the preset
                example: 2026888427
                format: int64
                type: integer
              name:
                description: The name of the preset
                example: Bright Lines
                type: string
            type: object
          type: array
      type: object
    Effects:
      description: The available effects for clips, layer (group)s and the composition
      properties:
        video:
          description: The available video effects
          items:
            $ref: '#/components/schemas/Effect'
          type: array
      type: object
    EventParameter:
      description: A parameter that handles events, but does not contain a value
      properties:
        id:
          description: The unique identifier of the parameter
          example: 1865335878211
          format: int64
          readOnly: true
          type: integer
        valuetype:
          description: The parameter type. This is "ParamEvent" for this type
          example: ParamEvent
          readOnly: true
          type: string
        view:
          $ref: '#/components/schemas/ParameterView'
      type: object
    FrameRate:
      description: Frame rate expressed as ratio
      properties:
        denom:
          description: Denominator
          example: 1001
          format: int32
          type: integer
        num:
          description: Numerator
          example: 24000
          format: int32
          type: integer
      readOnly: true
      type: object
    IntegerParameter:
      description: A parameter containing numeric data
      properties:
        id:
          description: The unique identifier of the parameter
          example: 1723491095783
          format: int64
          type: integer
        value:
          description: The value for the parameter
          example: 100
          format: int64
          type: integer
        valuetype:
          description: The parameter type. This is "ParamNumber" for this type
          example: ParamNumber
          type: string
        view:
          $ref: '#/components/schemas/ParameterView'
      type: object
    Layer:
      description: A layer is a container for clips that has its own dashboard and
        can be selected
      properties:
        audio:
          $ref: '#/components/schemas/AudioTrack'
        autopilot:
          $ref: '#/components/schemas/AutoPilot'
        bypassed:
          $ref: '#/components/schemas/BooleanParameter'
        clips:
          description: All clips belonging to this layer
          items:
            $ref: '#/components/schemas/Clip'
          type: array
        colorid:
          $ref: '#/components/schemas/ChoiceParameter'
        crossfadergroup:
          $ref: '#/components/schemas/ChoiceParameter'
        dashboard:
          $ref: '#/components/schemas/ParameterCollection'
        faderstart:
          $ref: '#/components/schemas/BooleanParameter'
        id:
          description: The unique id for the layer
          example: 1641549604807
          format: int64
          readOnly: true
          type: integer
        ignorecolumntrigger:
          $ref: '#/components/schemas/BooleanParameter'
        maskmode:
          $ref: '#/components/schemas/ChoiceParameter'
        master:
          $ref: '#/components/schemas/RangeParameter'
        name:
          $ref: '#/components/schemas/StringParameter'
        selected:
          allOf:
          - $ref: '#/components/schemas/BooleanParameter'
          description: Get whether the layer is currently selected
          readOnly: true
        solo:
          $ref: '#/components/schemas/BooleanParameter'
        transition:
          $ref: '#/components/schemas/LayerTransition'
        video:
          $ref: '#/components/schemas/VideoTrackLayer'
      type: object
    LayerGroup:
      description: A collection of layers, allowing controlling of a group of layers
        as a single object
      properties:
        audio:
          $ref: '#/components/schemas/AudioTrack'
        bypassed:
          $ref: '#/components/schemas/BooleanParameter'
        colorid:
          $ref: '#/components/schemas/ChoiceParameter'
        crossfadergroup:
          $ref: '#/components/schemas/ChoiceParameter'
        dashboard:
          $ref: '#/components/schemas/ParameterCollection'
        id:
          description: The unique id for the layer group
          example: 1641549604808
          format: int64
          readOnly: true
          type: integer
        ignorecolumntrigger:
          $ref: '#/components/schemas/BooleanParameter'
        layers:
          description: All the layers added to the layer group
          items:
            $ref: '#/components/schemas/Layer'
          type: array
        master:
          $ref: '#/components/schemas/RangeParameter'
        name:
          $ref: '#/components/schemas/StringParameter'
        selected:
          allOf:
          - $ref: '#/components/schemas/BooleanParameter'
          description: Get whether the layer group is currently selected
          readOnly: true
        solo:
          $ref: '#/components/schemas/BooleanParameter'
        speed:
          $ref: '#/components/schemas/RangeParameter'
        video:
          $ref: '#/components/schemas/VideoTrack'
      type: object
    LayerTransition:
      description: A layer transition describes the transition between clips within
        the layer
      properties:
        blend_mode:
          $ref: '#/components/schemas/ChoiceParameter'
        duration:
          $ref: '#/components/schemas/RangeParameter'
      type: object
    ParameterCollection:
      additionalProperties:
        oneOf:
        - $ref: '#/components/schemas/StringParameter'
        - $ref: '#/components/schemas/TextParameter'
        - $ref: '#/components/schemas/BooleanParameter'
        - $ref: '#/components/schemas/IntegerParameter'
        - $ref: '#/components/schemas/ColorParameter'
        - $ref: '#/components/schemas/RangeParameter'
        - $ref: '#/components/schemas/ChoiceParameter'
      description: An unstructured collection of parameters. Parameters are presented
        as a map where the key is the name of the parameter and the value is the parameter
        itself. Parameters may be any valid parameter type.
      type: object
    ParameterView:
      description: Semantic information on the parameter, contains hints about how
        best to display the parameter
      properties:
        control_type:
          description: Which control to show for the parameter
          enum:
          - based_on_param
          - choice_buttons
          - choice_combobox
          - spinner
          - duration_spinner
          - slider
          - slider_color_red
          - slider_color_green
          - slider_color_blue
          - slider_color_hue
          - slider_color_saturation
          - slider_color_brightness
          - slider_color_alpha
          - slider_color_opacity
          - color_pallette
          - color_picker
          - rotary
          - text
          - text_multiline
          type: string
        display_units:
          description: Which units to display.
          enum:
          - real
          - integer
          - percent
          - degrees
          - decibels
          - frames_per_second
          - milliseconds
          - seconds
          - beats
          - fractions
          type: string
        multiplier:
          description: Value to multiply with when displaying value. For a parameter
            with a value between 0 and 1 should display as 0 to 100
          example: 1.0
          format: double
          type: number
        step:
          description: Value increments to be used for e.g. sliding or rotary controls
          example: 1.0
          format: double
          type: number
        suffix:
          description: The suffix to display for the variable. May be empty
          example: '%'
          type: string
      readOnly: true
      type: object
    ProductInfo:
      description: Generic information about the product serving the api
      properties:
        major:
          description: The major version number of the Arena or Avenue instance handling
            the request.
          example: 7
          format: int64
          type: integer
        micro:
          description: The micro version number of the Arena or Avenue instance handling
            the request.
          example: 0
          format: int64
          type: integer
        minor:
          description: The minor version number of the Arena or Avenue instance handling
            the request.
          example: 8
          format: int64
          type: integer
        name:
          description: The product name. This is either 'Arena' or 'Avenue'
          example: Arena
          type: string
        revision:
          description: The revision of the Arena or Avenue instance handling the request.
          format: int64
          type: integer
      type: object
    RangeParameter:
      description: A parameter containing a floating-point value with a minimum and
        maximum allowed value.
      properties:
        id:
          description: The unique identifier of the parameter
          example: 1824357891293
          format: int64
          type: integer
        in:
          description: The lowest value we clamped the range to, inclusive
          example: 25.0
          format: double
          type: number
        max:
          description: The highest allowed value for the parameter, inclusive
          example: 100.0
          format: double
          type: number
        min:
          description: The lowest allowed value for the parameter, inclusive
          example: 0.0
          format: double
          type: number
        out:
          description: The highest value we clamped the range to, inclusive
          example: 75.0
          format: double
          type: number
        value:
          description: The value for the parameter
          example: 50.0
          format: double
          type: number
        valuetype:
          description: The parameter type. This is "ParamRange" for this type
          example: ParamRange
          type: string
        view:
          $ref: '#/components/schemas/ParameterView'
      type: object
    ResetParameter:
      description: Options for resetting a parameter, should only the value be reset,
        or should animations also be reset
      properties:
        resetanimation:
          description: If set to true, animations are also reset
          type: boolean
      type: object
    Source:
      description: A source to be used in a clip
      properties:
        idstring:
          description: The unique identifier for the source
          example: A401
          type: string
        name:
          description: The descriptive name of the source
          example: Gradient
          type: string
        presets:
          description: All the presets for this source
          items:
            properties:
              id:
                description: The unique identifier for the preset
                example: 2026883901
                format: int64
                type: integer
              name:
                description: The name of the preset
                example: Dutch Sky
                type: string
            type: object
          type: array
      type: object
    Sources:
      description: The available sources for clips
      properties:
        video:
          description: The available video sources
          items:
            $ref: '#/components/schemas/Source'
          type: array
      type: object
    StringParameter:
      description: A parameter containing string data
      properties:
        id:
          description: The unique identifier of the parameter
          example: 1641335430527
          format: int64
          type: integer
        value:
          description: The value for the parameter
          type: string
        valuetype:
          description: The parameter type. This is "ParamString" for this type
          example: ParamString
          type: string
        view:
          $ref: '#/components/schemas/ParameterView'
      type: object
    TempoController:
      description: The controller for various tempo-related aspects of the composition
      properties:
        resync:
          $ref: '#/components/schemas/EventParameter'
        tempo:
          $ref: '#/components/schemas/RangeParameter'
        tempo_pull:
          $ref: '#/components/schemas/EventParameter'
        tempo_push:
          $ref: '#/components/schemas/EventParameter'
        tempo_tap:
          $ref: '#/components/schemas/EventParameter'
      type: object
    TextParameter:
      description: A parameter containing string data, possibly multiline
      properties:
        id:
          description: The unique identifier of the parameter
          example: 1638334400287
          format: int64
          type: integer
        value:
          description: The value for the parameter
          example: 'Some

            Multiline

            String

            '
        valuetype:
          description: The parameter type. This is "ParamText" for this type
          example: ParamText
          type: string
        view:
          $ref: '#/components/schemas/ParameterView'
      type: object
    TransportBPMSync:
      description: The timeline transport controls
      nullable: true
      properties:
        controls:
          description: BPM Sync controls
          nullable: false
          properties:
            beatloop:
              $ref: '#/components/schemas/ChoiceParameter'
            bpm:
              $ref: '#/components/schemas/RangeParameter'
            duration:
              $ref: '#/components/schemas/RangeParameter'
            playdirection:
              $ref: '#/components/schemas/ChoiceParameter'
            playmode:
              $ref: '#/components/schemas/ChoiceParameter'
            playmodeaway:
              $ref: '#/components/schemas/ChoiceParameter'
            speed:
              $ref: '#/components/schemas/RangeParameter'
            syncmode:
              $ref: '#/components/schemas/ChoiceParameter'
          type: object
        position:
          $ref: '#/components/schemas/RangeParameter'
      type: object
    TransportTimeline:
      description: The timeline transport controls
      nullable: true
      properties:
        controls:
          description: Timeline controls
          nullable: false
          properties:
            duration:
              $ref: '#/components/schemas/RangeParameter'
            playdirection:
              $ref: '#/components/schemas/ChoiceParameter'
            playmode:
              $ref: '#/components/schemas/ChoiceParameter'
            playmodeaway:
              $ref: '#/components/schemas/ChoiceParameter'
            speed:
              $ref: '#/components/schemas/RangeParameter'
          type: object
        position:
          $ref: '#/components/schemas/RangeParameter'
      type: object
    VideoEffect:
      description: A videoeffect represents a single effect in a chain of effects
        to be applied to a source. Properties on the videoeffect control how and what
        is rendered in the effect.
      properties:
        bypassed:
          allOf:
          - $ref: '#/components/schemas/BooleanParameter'
          - description: Bypassed param is not always available, primary Transform
              for example is not allowed to by bypassed
          - nullable: true
        display_name:
          description: The name to show the user
          example: ChromaKey
          type: string
        effect:
          $ref: '#/components/schemas/ParameterCollection'
        id:
          description: The unique id of the video effect instance
          example: 1723069642348
          format: int64
          readOnly: true
          type: integer
        mixer:
          $ref: '#/components/schemas/ParameterCollection'
        name:
          description: The unique name of the key
          example: ChromaKey
          type: string
        params:
          $ref: '#/components/schemas/ParameterCollection'
      type: object
    VideoFileInfo:
      description: Meta information for a video file
      nullable: true
      properties:
        duration:
          description: Duration of file expressed as hours:seconds:minutes:milliseconds
          example: '00:00:19.06'
          type: string
        duration_ms:
          description: Duration of file expressed as milliseconds
          example: 19269.249999999996
          format: double
          readOnly: true
          type: number
        exists:
          description: Whether file is actually present on disk at the given location
          example: true
          type: boolean
        framerate:
          $ref: '#/components/schemas/FrameRate'
        height:
          description: The number of pixels the video is high
          example: 1080
          format: int32
          type: integer
        path:
          description: The location of the file on disk
          example: /Users/Resolume/Videos/Clip1.mov
          type: string
        width:
          description: The number of pixels the video is wide
          example: 1920
          format: int32
          type: integer
      readOnly: true
      type: object
    VideoTrack:
      description: A video track, as part of a clip,layer,group or a composition
      nullable: true
      properties:
        effects:
          description: All the effects that may be applied when the video track is
            played
          items:
            $ref: '#/components/schemas/VideoEffect'
          type: array
        height:
          $ref: '#/components/schemas/RangeParameter'
        mixer:
          $ref: '#/components/schemas/ParameterCollection'
        opacity:
          $ref: '#/components/schemas/RangeParameter'
        width:
          $ref: '#/components/schemas/RangeParameter'
      type: object
    VideoTrackClip:
      allOf:
      - $ref: '#/components/schemas/VideoTrack'
      - properties:
          a:
            $ref: '#/components/schemas/BooleanParameter'
          b:
            $ref: '#/components/schemas/BooleanParameter'
          description:
            description: The description of the source belonging to this video track
            example: Clip1.mov\nDXV 3.0 Normal Quality, With Alpha, 1920x1080, 23.98
              Fps\r\n00:00:19.269
            type: string
          fileinfo:
            $ref: '#/components/schemas/VideoFileInfo'
          g:
            $ref: '#/components/schemas/BooleanParameter'
          r:
            $ref: '#/components/schemas/BooleanParameter'
          resize:
            $ref: '#/components/schemas/ChoiceParameter'
          sourceparams:
            allOf:
            - $ref: '#/components/schemas/ParameterCollection'
            - description: Additional params for source of the clip
            - nullable: true
        type: object
    VideoTrackLayer:
      allOf:
      - $ref: '#/components/schemas/VideoTrack'
      - properties:
          autosize:
            $ref: '#/components/schemas/ChoiceParameter'
        type: object
info:
  contact:
    email: support@resolume.com
  description: This is the API reference for the Resolume Arena & Avenue REST API.
    To use this API, start Resolume Arena or Avenue and enable the server under the
    'Webserver' heading in the preferences.
  title: Arena & Avenue REST API
  version: 0.0.1
paths:
  /composition:
    get:
      description: This contains the composition properties, all the decks, layers
        and clips
      operationId: list_composition
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Composition'
          description: OK
      summary: Retrieve the complete composition
      tags:
      - composition
    put:
      description: This allows for updating all parameters in a composition, its decks,
        layers and clips
      operationId: replace_composition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Composition'
        description: The updated composition properties, with possible decks, layers
          and/or clips
        required: true
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
      summary: Update the complete composition
      tags:
      - composition
  /composition/action:
    post:
      description: With this call an action can be either undone, or an action that
        was undone can be executed again
      operationId: composition_action
      requestBody:
        content:
          text/plain:
            schema:
              description: Undo or redo the last action
              enum:
              - undo
              - redo
              type: string
        description: Indicate whether you want to undo- or redo an action
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: An invalid action was sent.
        '404':
          content: {}
          description: Action cannot be executed because a file is not found
        '412':
          content: {}
          description: A precondition failed, the action cannot be executed
      summary: Undo or redo previously executed actions
      tags:
      - composition
      x-codegen-request-body-name: execute-action
  /composition/clips/by-id/{clip-id}:
    get:
      description: Retrieve all clip information and associated effects
      operationId: get_clip_by_id
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clip'
          description: OK
        '404':
          content: {}
          description: The requested clip does not exist
      summary: Retrieve a clip by id
      tags:
      - clip
    parameters:
    - description: The unique identifier for the clip to use
      in: path
      name: clip-id
      required: true
      schema:
        format: int64
        type: integer
    put:
      description: Update a single clip and its effects
      operationId: replace_clip_by_id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clip'
        description: The updated clip and/or effect properties
        required: true
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The requested clip does not exist
      summary: Update clip and/or its effects by id
      tags:
      - clip
  /composition/clips/by-id/{clip-id}/clear:
    parameters:
    - description: The unique clip idenfier
      in: path
      name: clip-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Clears the clip, removing all tracks and settings
      operationId: clip_clear_by_id
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested clip does not exist
      summary: Clears the clip with the given unique id
      tags:
      - clip
  /composition/clips/by-id/{clip-id}/connect:
    parameters:
    - description: The unique clip idenfier
      in: path
      name: clip-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Connect the clip, possibly activating it
      operationId: clip_connect_by_id
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
        description: Whether to connect the clip. This is analogous to whether the
          mouse is pressed down on the clip. If omitted, true and false are both send
          - as if a short click was generated
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested clip does not exist
      summary: Connect the clip by id
      tags:
      - clip
  /composition/clips/by-id/{clip-id}/effects/video/move:
    parameters:
    - description: The unique clip id to use
      in: path
      name: clip-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Take an existing effect instance, and move it to the end of the
        clip
      operationId: move_effect_clip_by_id
      requestBody:
        content:
          text/plain:
            examples:
              clip-effect:
                value: /composition/layers/1/clips/5/effects/video/2
              clip-effect-by-id:
                value: /composition/clips/by-id/1658311744128/effects/video/5
              composition-effect:
                value: /composition/effects/video/3
              effect-by-id:
                value: effects/by-id/1658311809911
              layer-effect:
                value: /composition/layers/1/effects/video/2
              layer-effect-by-id:
                value: /composition/layers/by-id/1658311521181/effects/video/1
              layer-group-effect:
                value: /composition/layergroups/2/effects/video/1
              layer-group-effect-by-id:
                value: /composition/layergroups/by-id/1658311522986/effects/video/7
            schema:
              type: string
        description: The effect instance to move
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: The requested clip does not exist
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Move an effect to the end of the clip
      tags:
      - clip
      x-codegen-request-body-name: effect-instantiation-uri
  /composition/clips/by-id/{clip-id}/effects/video/move/{offset}:
    parameters:
    - description: The unique clip id to use
      in: path
      name: clip-id
      required: true
      schema:
        format: int64
        type: integer
    - description: The offset at which to insert the effect
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Take an existing effect instance, and move it to the given offset
      operationId: move_effect_clip_offset_by_id
      requestBody:
        content:
          text/plain:
            examples:
              clip-effect:
                value: /composition/layers/1/clips/5/effects/video/2
              clip-effect-by-id:
                value: /composition/clips/by-id/1658311744128/effects/video/5
              composition-effect:
                value: /composition/effects/video/3
              effect-by-id:
                value: effects/by-id/1658311809911
              layer-effect:
                value: /composition/layers/1/effects/video/2
              layer-effect-by-id:
                value: /composition/layers/by-id/1658311521181/effects/video/1
              layer-group-effect:
                value: /composition/layergroups/2/effects/video/1
              layer-group-effect-by-id:
                value: /composition/layergroups/by-id/1658311522986/effects/video/7
            schema:
              type: string
        description: The effect instance to move
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: The requested layer group does not exist
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Move an effect to the given offset in the clip
      tags:
      - clip
      x-codegen-request-body-name: effect-instantiation-uri
  /composition/clips/by-id/{clip-id}/open:
    parameters:
    - description: The unique clip idenfier
      in: path
      name: clip-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Loads a file or opens a source into a clip, will retain settings
        as much as possible
      operationId: clip_open_by_id
      requestBody:
        content:
          text/plain:
            examples:
              mac-open-file:
                value: file:///Users/Resolume/file%201.mov
              open-video-source:
                value: source:///video/Checkered
              open-video-source-preset:
                value: source:///video/Checkered/12345
              windows-open-file:
                value: file:///C:/Users/Resolume/file%201.mov
            schema:
              type: string
        description: 'The path to the file, in URL format, or a source URL. Special
          characters are to be encoded using URL-encoding.

          As an example, to open a file with path `/Users/Resolume/file 1.mov` you''d
          use an URL like `file:///Users/Resolume/file%201.mov`.

          On Windows id''d be something like `file:///C:/Users/Resolume/file%201.mov`.
          Note that three forward slashes are needed after the

          `file:` part, even on Windows. Opening a source uses the following format:
          `source:///video/<source name>`, an optional

          preset name can be added, `source:///video/<source name>/<preset id>`

          '
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The given clip URL is invalid
        '404':
          content: {}
          description: The requested layer or clip does not exist
        '412':
          content:
            text/plain:
              schema:
                example: the clip cannot be changed currently
                type: string
          description: A precondition failed, the clip cannot be loaded
      summary: Loads a file or opens a source into the selected clip
      tags:
      - clip
      x-codegen-request-body-name: clip-open-url
  /composition/clips/by-id/{clip-id}/openfile:
    parameters:
    - description: The unique clip idenfier
      in: path
      name: clip-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      deprecated: true
      description: Loads file into clip, will retain settings as much as possible
      operationId: clip_openfile_by_id
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        description: 'The path to the file, in URL format. Right now only the `file`
          protocol is supported. Special characters

          are to be encoded using URL-encoding. As an example, to open a file with
          path `/Users/Resolume/file 1.mov`

          you''d use an URL like `file:///Users/Resolume/file%201.mov`. On Windows
          id''d be something like

          `file:///C:/Users/Resolume/file%201.mov`. Note that three forward slashes
          are needed after the `file:` part,

          even on Windows.

          '
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The given clip URL is invalid
        '404':
          content: {}
          description: The requested clip does not exist
        '412':
          content:
            text/plain:
              schema:
                example: the clip cannot be changed currently
                type: string
          description: A precondition failed, the clip cannot be loaded
      summary: Loads file into clip with the given unique identifier
      tags:
      - clip
      x-codegen-request-body-name: clip-file-url
  /composition/clips/by-id/{clip-id}/select:
    parameters:
    - description: Unique id of the clip to select
      in: path
      name: clip-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Select the clip
      operationId: clip_select_by_id
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested clip does not exist
      summary: Select the clip by id
      tags:
      - clip
  /composition/clips/by-id/{clip-id}/thumbnail:
    delete:
      description: Undo any custom thumbnail selection and revert to the auto-generated
        thumbnail
      operationId: revert_clip_thumbnail_by_id
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: Requested clip not found
        '412':
          content:
            text/plain:
              schema:
                example: the clip cannot be changed currently
                type: string
          description: A precondition failed, i.e. the composition is locked
      summary: Revert thumbnail to default for the clip by id
      tags:
      - clip
    get:
      description: Finds the clip with the given unique id and retrieves the latest
        thumbnail
      operationId: list_clip_thumbnail_by_id
      responses:
        '200':
          content:
            image/png:
              schema:
                format: binary
                type: string
          description: OK
        '404':
          content: {}
          description: The requested clip does not exist or the timestamp does not
            match last update
      summary: Retrieve the latest thumbnail belonging to the specified clip
      tags:
      - clip
    parameters:
    - description: The unique clip id to get the thumbnail for
      in: path
      name: clip-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Finds the clip with the specified id in the grid and sets the thumbnail
      operationId: set_clip_thumbnail_by_id
      requestBody:
        content:
          multipart/form-data:
            encoding:
              file:
                contentType: image/png, image/jpeg, image/gif
            schema:
              properties:
                file:
                  description: The image data to set as thumbnail
                  format: binary
                  type: string
              type: object
          text/plain:
            examples:
              mac-open-file:
                value: file:///Users/Resolume/thumbnail%201.gif
              open-video-source:
                value: source:///video/Checkered
              open-video-source-preset:
                value: source:///video/Checkered/12345
              windows-open-file:
                value: file:///C:/Users/Resolume/thumbnail%201.png
              windows-open-unc:
                value: file://nas-hostname/Resolume/thumbnail%201.jpg
            schema:
              type: string
        description: 'The path to the file, in URL format. Right now only the `file`
          protocol is supported. Special characters

          are to be encoded using URL-encoding. As an example, to open a thumbnail
          with path `/Users/Resolume/thumbnail 1.png`

          you''d use an URL like `file:///Users/Resolume/thumbnail%201.png`. On Windows
          id''d be something like

          `file:///C:/Users/Resolume/thumbnail%201.png`. Note that three forward slashes
          are needed after the `file:` part,

          even on Windows. The thumbnail file must be in gif, png or jpg format.

          '
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The given clip URL is invalid
        '404':
          content: {}
          description: Requested clip not found
        '412':
          content:
            text/plain:
              schema:
                example: the clip cannot be changed currently
                type: string
          description: A precondition failed, the thumbnail cannot be loaded
      summary: Set a custom thumbnail for the clip by id
      tags:
      - clip
      x-codegen-request-body-name: clip-file-thumbnail
  /composition/clips/by-id/{clip-id}/thumbnail/{last-updated}:
    get:
      description: Finds the clip with the given unique id and retrieves the thumbnail
        if the thumbnail was last updated at the given timestamp
      operationId: get_clip_thumbnail_by_id_and_timestamp
      responses:
        '200':
          content:
            image/png:
              schema:
                format: binary
                type: string
          description: OK
        '404':
          content: {}
          description: The requested clip does not exist or the timestamp does not
            match last update
      summary: Retrieve the latest thumbnail belonging to the specified clip
      tags:
      - clip
    parameters:
    - description: The unique clip id to get the thumbnail for
      in: path
      name: clip-id
      required: true
      schema:
        format: int64
        type: integer
    - description: Last updated timestamp for the clip thumbnail. If given, must match
        the timestamp of the current thumbnail.
      in: path
      name: last-updated
      required: true
      schema:
        format: int64
        type: integer
  /composition/clips/selected:
    get:
      description: Retrieve all clip information and associated effects
      operationId: list_selected_clip
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clip'
          description: OK
        '404':
          content: {}
          description: No selected clip was found
      summary: Retrieve the selected clip
      tags:
      - clip
    put:
      description: Update a single clip and its effects
      operationId: replace_selected_clip
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clip'
        description: The updated clip and/or effect properties
        required: true
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: No selected clip was found
      summary: Update selected clip and/or its effects
      tags:
      - clip
  /composition/clips/selected/clear:
    post:
      description: Clears the clip, removing all tracks and settings
      operationId: selected_clip_clear
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: No selected clip found
      summary: Clears the selected clip
      tags:
      - clip
  /composition/clips/selected/connect:
    post:
      description: Connect the clip, possibly activating it
      operationId: selected_clip_connect
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
        description: Whether to connect the clip. This is analogous to whether the
          mouse is pressed down on the clip. If omitted, true and false are both send
          - as if a short click was generated
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: No selected clip found
      summary: Connect the selected clip
      tags:
      - clip
      x-codegen-request-body-name: connect-clip
  /composition/clips/selected/effects/video/add:
    post:
      description: Add an effect to the selected clip
      operationId: add_effect_selected_clip
      requestBody:
        content:
          text/plain:
            examples:
              blow:
                value: effect:///video/Blow
              blow-solid:
                value: effect:///video/Blow/Solid
            schema:
              type: string
        description: The effect to add to the clip
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: No selected clip was found
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Add an effect to the selected clip
      tags:
      - clip
      x-codegen-request-body-name: selected-clip-add-effect
  /composition/clips/selected/effects/video/add/{offset}:
    parameters:
    - description: The offset at which to insert the new effect
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Add an effect to the selected clip
      operationId: selected_clip_add_effect_offset
      requestBody:
        content:
          text/plain:
            examples:
              blow:
                value: effect:///video/Blow
              blow-solid:
                value: effect:///video/Blow/Solid
            schema:
              type: string
        description: The effect to add to the clip
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification or incorrect offset
        '404':
          content: {}
          description: No selected clip was found
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Add an effect to the selected clip
      tags:
      - clip
      x-codegen-request-body-name: selected-clip-add-effect-offset
  /composition/clips/selected/effects/video/{offset}:
    delete:
      description: Remove an effect from a clip
      operationId: delete_selected_clip_effect
      responses:
        '204':
          description: OK
        '404':
          description: No effect found at the given offset or no clip is selected
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Remove an effect from a clip
      tags:
      - clip
    parameters:
    - description: The offset of the effect to remove
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
  /composition/clips/selected/open:
    post:
      description: Loads a file or opens a source into a clip, will retain settings
        as much as possible
      operationId: selected_clip_open
      requestBody:
        content:
          text/plain:
            examples:
              mac-open-file:
                value: file:///Users/Resolume/file%201.mov
              open-video-source:
                value: source:///video/Checkered
              open-video-source-preset:
                value: source:///video/Checkered/12345
              windows-open-file:
                value: file:///C:/Users/Resolume/file%201.mov
            schema:
              type: string
        description: 'The path to the file, in URL format, or a source URL. Special
          characters are to be encoded using URL-encoding.

          As an example, to open a file with path `/Users/Resolume/file 1.mov` you''d
          use an URL like `file:///Users/Resolume/file%201.mov`.

          On Windows id''d be something like `file:///C:/Users/Resolume/file%201.mov`.
          Note that three forward slashes are needed after the

          `file:` part, even on Windows. Opening a source uses the following format:
          `source:///video/<source name>`, an optional

          preset name can be added, `source:///video/<source name>/<preset id>`

          '
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The given clip URL is invalid
        '404':
          content: {}
          description: The requested layer or clip does not exist
        '412':
          content:
            text/plain:
              schema:
                example: the clip cannot be changed currently
                type: string
          description: A precondition failed, the clip cannot be loaded
      summary: Loads a file or opens a source into the selected clip
      tags:
      - clip
      x-codegen-request-body-name: clip-open-url
  /composition/clips/selected/openfile:
    post:
      deprecated: true
      description: Loads file into clip, will retain settings as much as possible
      operationId: selected_clip_openfile
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        description: 'The path to the file, in URL format. Right now only the `file`
          protocol is supported. Special characters

          are to be encoded using URL-encoding. As an example, to open a file with
          path `/Users/Resolume/file 1.mov`

          you''d use an URL like `file:///Users/Resolume/file%201.mov`. On Windows
          id''d be something like

          `file:///C:/Users/Resolume/file%201.mov`. Note that three forward slashes
          are needed after the `file:` part,

          even on Windows.

          '
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The given clip URL is invalid
        '404':
          content: {}
          description: No selected clip found
        '412':
          content:
            text/plain:
              schema:
                example: the clip cannot be changed currently
                type: string
          description: A precondition failed, the clip cannot be loaded
      summary: Loads file into the selected clip
      tags:
      - clip
      x-codegen-request-body-name: clip-file-url
  /composition/clips/selected/thumbnail:
    delete:
      description: Undo any custom thumbnail selection and revert to the auto-generated
        thumbnail
      operationId: revert_selected_clip_thumbnail
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: No selected clip found
        '412':
          content:
            text/plain:
              schema:
                example: the clip cannot be changed currently
                type: string
          description: A precondition failed, i.e. the composition is locked
      summary: Revert thumbnail to default for the selected clip
      tags:
      - clip
    get:
      description: Finds the selected clip and retrieves the latest thumbnail
      operationId: list_selected_clip_thumbnail
      responses:
        '200':
          content:
            image/png:
              schema:
                format: binary
                type: string
          description: OK
        '404':
          content: {}
          description: No selected clip found
      summary: Retrieve the latest thumbnail belonging to the selected clip
      tags:
      - clip
    post:
      description: Finds the selected clip in the grid and sets the thumbnail
      operationId: set_selected_clip_thumbnail
      requestBody:
        content:
          multipart/form-data:
            encoding:
              file:
                contentType: image/png, image/jpeg, image/gif
            schema:
              properties:
                file:
                  description: The image data to set as thumbnail
                  format: binary
                  type: string
              type: object
          text/plain:
            examples:
              mac-open-file:
                value: file:///Users/Resolume/thumbnail%201.gif
              open-video-source:
                value: source:///video/Checkered
              open-video-source-preset:
                value: source:///video/Checkered/12345
              windows-open-file:
                value: file:///C:/Users/Resolume/thumbnail%201.png
              windows-open-unc:
                value: file://nas-hostname/Resolume/thumbnail%201.jpg
            schema:
              type: string
        description: 'The path to the file, in URL format. Right now only the `file`
          protocol is supported. Special characters

          are to be encoded using URL-encoding. As an example, to open a thumbnail
          with path `/Users/Resolume/thumbnail 1.png`

          you''d use an URL like `file:///Users/Resolume/thumbnail%201.png`. On Windows
          id''d be something like

          `file:///C:/Users/Resolume/thumbnail%201.png`. Note that three forward slashes
          are needed after the `file:` part,

          even on Windows. The thumbnail file must be in gif, png or jpg format.

          '
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The given clip URL is invalid
        '404':
          content: {}
          description: No selected clip found
        '412':
          content:
            text/plain:
              schema:
                example: the clip cannot be changed currently
                type: string
          description: A precondition failed, the thumbnail cannot be loaded
      summary: Set a custom thumbnail for the selected clip
      tags:
      - clip
      x-codegen-request-body-name: clip-file-thumbnail
  /composition/clips/selected/thumbnail/{last-updated}:
    get:
      description: Finds the selected clip and retrieves the thumbnail if the thumbnail
        was last updated at the given timestamp
      operationId: get_last_clip_thumbnail_by_timestamp
      responses:
        '200':
          content:
            image/png:
              schema:
                format: binary
                type: string
          description: OK
        '404':
          content: {}
          description: The requested layer or clip does not exist, or the timestamp
            does not match last update
      summary: Retrieve the latest thumbnail belonging to the selected clip
      tags:
      - clip
    parameters:
    - description: Last updated timestamp for the clip thumbnail. If given, must match
        the timestamp of the current thumbnail.
      in: path
      name: last-updated
      required: true
      schema:
        format: int64
        type: integer
  /composition/clips/selected/{parameter}/reset:
    parameters:
    - description: Name of the parameter to reset
      in: path
      name: parameter
      required: true
      schema:
        type: string
    post:
      description: This resets a parameter on the selected clip to default. If a JSON
        body is given and 'resetanimation' is set to true, animations are also reset.
      operationId: reset_selected_clip_param
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        description: Parameter reset options, whether to also reset animations
        required: false
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: No selected clip was found, or parameter does not exist
      summary: Reset a parameter in the selected clip to its default value.
      tags:
      - clip
  /composition/clips/{clip-id}/effects/video/add:
    parameters:
    - description: The unique identifier for the clip to use
      in: path
      name: clip-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Add an effect to a clip by its unique id
      operationId: add_effect_clip_by_id
      requestBody:
        content:
          text/plain:
            examples:
              blow:
                value: effect:///video/Blow
              blow-solid:
                value: effect:///video/Blow/Solid
            schema:
              type: string
        description: The effect to add to the clip
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: The requested clip does not exit
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Add an effect to a clip by its unique identifier
      tags:
      - clip
      x-codegen-request-body-name: clip-add-effect-by-id
  /composition/clips/{clip-id}/effects/video/add/{offset}:
    parameters:
    - description: The unique identifier for the clip to use
      in: path
      name: clip-id
      required: true
      schema:
        format: int64
        type: integer
    - description: The offset at which to insert the new effect
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Add an effect to the clip with the unique identifier
      operationId: clip_add_effect_offset_by_id
      requestBody:
        content:
          text/plain:
            examples:
              blow:
                value: effect:///video/Blow
              blow-solid:
                value: effect:///video/Blow/Solid
            schema:
              type: string
        description: The effect to add to the clip
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification or incorrect offset
        '404':
          content: {}
          description: The requested clip does not exit
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Add an effect to a clip by its unique identifier
      tags:
      - clip
      x-codegen-request-body-name: clip-add-effect-by-id-offset
  /composition/clips/{clip-id}/effects/video/{offset}:
    delete:
      description: Remove an effect from a clip
      operationId: delete_clip_effect_by_id
      responses:
        '204':
          description: OK
        '404':
          description: No effect found at the given offset or no matching clip is
            found
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Remove an effect from a clip
      tags:
      - clip
    parameters:
    - description: The unique identifier for the clip to use
      in: path
      name: clip-id
      required: true
      schema:
        format: int64
        type: integer
    - description: The offset of the effect to remove
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
  /composition/clips/{clip-id}/{parameter}/reset:
    parameters:
    - description: The unique identifier for the clip to reset parameter in
      in: path
      name: clip-id
      required: true
      schema:
        format: int64
        type: integer
    - description: Name of the parameter to reset
      in: path
      name: parameter
      required: true
      schema:
        type: string
    post:
      description: This resets a parameter on the indexed clip to default. If a JSON
        body is given and 'resetanimation' is set to true, animations are also reset.
      operationId: reset_clip_param_by_id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        description: Parameter reset options, whether to also reset animations
        required: false
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The given clip or parameter does not exist
      summary: Reset a parameter in a clip to its default value.
      tags:
      - clip
  /composition/columns/add:
    post:
      description: This adds a new column either at the end, or somewhere else in
        the composition
      operationId: composition_add_column
      requestBody:
        content:
          text/plain:
            examples:
              column-by-id:
                value: /composition/columns/by-id/1658311520090
              column-by-position:
                value: /composition/columns/3
              layer-group-column:
                value: /composition/layergroups/1/columns/2
            schema:
              type: string
        description: The existing column to add the new column before, if not given,
          the new column will be added at the end
      responses:
        '204':
          description: OK
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Add a new column to the composition
      tags:
      - column
      x-codegen-request-body-name: column-add
  /composition/columns/by-id/{column-id}:
    delete:
      description: Remove the column with the given id
      operationId: remove_column_by_id
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested column does not exist
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Remove specific layer by id
      tags:
      - column
      - layergroup
    get:
      description: Returns a single column, either from the composition or a layer
        group
      operationId: get_column_by_id
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Column'
          description: OK
        '404':
          content: {}
          description: The requested column does not exist
      summary: Retrieve column properties by id
      tags:
      - column
      - layergroup
    parameters:
    - description: The unique column id
      in: path
      name: column-id
      required: true
      schema:
        format: int64
        type: integer
    put:
      description: Update a single column
      operationId: replace_column_by_id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Column'
        description: The updated column properties
        required: true
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The requested column does not exist
      summary: Update specific column by id
      tags:
      - column
      - layergroup
  /composition/columns/by-id/{column-id}/connect:
    parameters:
    - description: The unique identifier for the column to connect
      in: path
      name: column-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Connect the column, possibly activating it. This works for both
        regular columns as well as columns inside a layer group
      operationId: column_connect_by_id
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
        description: Whether to connect the column. This is analogous to whether the
          mouse is pressed down on the column. If omitted, true and false are both
          send - as if a short click was generated
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested column does not exist
      summary: Connect the column by id
      tags:
      - column
      - layergroup
  /composition/columns/by-id/{column-id}/duplicate:
    parameters:
    - description: The unique column id to use
      in: path
      name: column-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Take the given column and make a copy of it. All properties will
        be the same, except for the unique identifiers. The new column is inserted
        into the composition or layer group next to the existing one.
      operationId: composition_duplicate_column_by_id
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested column does not exist
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Duplicate the given column
      tags:
      - column
      - layergroup
  /composition/columns/by-id/{column-id}/select:
    parameters:
    - description: The unique identifier for the column to select
      in: path
      name: column-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Select the column
      operationId: column_select_by_id
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested column does not exist
      summary: Select the column by id
      tags:
      - column
      - layergroup
  /composition/columns/by-id/{column-id}/{parameter}/reset:
    parameters:
    - description: The unique id of the column to reset parameter on
      in: path
      name: column-id
      required: true
      schema:
        format: int64
        type: integer
    - description: Name of the parameter to reset
      in: path
      name: parameter
      required: true
      schema:
        type: string
    post:
      description: This resets a parameter on the indexed column to default. If a
        JSON body is given and 'resetanimation' is set to true, animations are also
        reset.
      operationId: reset_column_param_by_id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        description: Parameter reset options, whether to also reset animations
        required: false
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The given column or parameter does not exist
      summary: Reset a parameter in a column to its default value.
      tags:
      - column
      - layergroup
  /composition/columns/{column-index}:
    delete:
      description: Remove the column with the given index
      operationId: delete_column
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested column does not exist
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Remove a column by index
      tags:
      - column
    get:
      description: Returns a single column
      operationId: get_column
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Column'
          description: OK
        '404':
          content: {}
          description: The requested column does not exist
      summary: Retrieve column properties by index
      tags:
      - column
    parameters:
    - description: Column index to use (1-based)
      in: path
      name: column-index
      required: true
      schema:
        format: int64
        type: integer
    put:
      description: Update a single column
      operationId: replace_column
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Column'
        description: The updated column properties
        required: true
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The requested column or parameter does not exist
      summary: Update specific column by index
      tags:
      - column
  /composition/columns/{column-index}/connect:
    parameters:
    - description: Column index to connect (1-based)
      in: path
      name: column-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Connect the column, possibly activating it
      operationId: column_connect
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
        description: Whether to connect the column. This is analogous to whether the
          mouse is pressed down on the column. If omitted, true and false are both
          send - as if a short click was generated
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested column does not exist
      summary: Connect the column by index
      tags:
      - column
  /composition/columns/{column-index}/duplicate:
    parameters:
    - description: Column index to use (1-based)
      in: path
      name: column-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Take the given column and make a copy of it. All properties will
        be the same, except for the unique identifiers. The new column is inserted
        into the composition next to the existing one.
      operationId: composition_duplicate_column
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested column does not exist
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Duplicate the given column
      tags:
      - column
  /composition/columns/{column-index}/select:
    parameters:
    - description: Column index to select (1-based)
      in: path
      name: column-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Select the column
      operationId: column_select
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested column does not exist
      summary: Select the column by its position in the clip grid
      tags:
      - column
  /composition/columns/{column-index}/{parameter}/reset:
    parameters:
    - description: Column index to reset parameter on (1-based)
      in: path
      name: column-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Name of the parameter to reset
      in: path
      name: parameter
      required: true
      schema:
        type: string
    post:
      description: This resets a parameter on the indexed column to default. If a
        JSON body is given and 'resetanimation' is set to true, animations are also
        reset.
      operationId: reset_column_param
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        description: Parameter reset options, whether to also reset animations
        required: false
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The given column or parameter does not exist
      summary: Reset a parameter in a column to its default value.
      tags:
      - column
  /composition/decks/add:
    post:
      description: This adds a new deck either at the end, or somewhere else in the
        composition
      operationId: composition_add_deck
      requestBody:
        content:
          text/plain:
            examples:
              layer-by-id:
                value: /composition/decks/by-id/1681349832470
              layer-by-position:
                value: /composition/decks/3
            schema:
              type: string
        description: The existing deck to add the new deck before, if not given, the
          new deck will be added at the end
      responses:
        '204':
          description: OK
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Add a new deck to the composition
      tags:
      - deck
      x-codegen-request-body-name: add-deck
  /composition/decks/by-id/{deck-id}:
    delete:
      description: Remove the deck with the given id
      operationId: delete_deck_by_id
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested deck does not exist
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Remove specified deck by id
      tags:
      - deck
    get:
      description: Returns a single deck
      operationId: get_deck_by_id
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deck'
          description: OK
        '404':
          content: {}
          description: The requested deck does not exist
      summary: Retrieve deck properties by id
      tags:
      - deck
    parameters:
    - description: The unique deck id
      in: path
      name: deck-id
      required: true
      schema:
        format: int64
        type: integer
    put:
      description: Update a single deck
      operationId: replace_deck_by_id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deck'
        description: The updated deck properties
        required: true
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The requested deck does not exist
      summary: Update specific deck by id
      tags:
      - deck
  /composition/decks/by-id/{deck-id}/close:
    parameters:
    - description: The unique deck id to use
      in: path
      name: deck-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Take the given deck and close it.
      operationId: composition_close_deck_by_id
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested deck does not exist
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked, or still
            loading
      summary: Close the given deck
      tags:
      - deck
  /composition/decks/by-id/{deck-id}/duplicate:
    parameters:
    - description: The unique deck id to use
      in: path
      name: deck-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Take the given deck and make a copy of it. All properties will
        be the same, except for the unique identifiers. The new deck is inserted into
        the composition next to the existing one.
      operationId: composition_duplicate_deck_by_id
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested deck does not exist
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked, or still
            loading
      summary: Duplicate the given deck
      tags:
      - deck
  /composition/decks/by-id/{deck-id}/open:
    parameters:
    - description: The unique deck id to use
      in: path
      name: deck-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Take the given deck and open it again.
      operationId: composition_open_deck_by_id
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested deck does not exist
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked, or still
            loading
      summary: Re-open the given deck
      tags:
      - deck
  /composition/decks/by-id/{deck-id}/select:
    parameters:
    - description: The unique deck id to select
      in: path
      name: deck-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Select the deck with the given id
      operationId: deck_select_by_id
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested deck does not exist
      summary: Select the deck by id
      tags:
      - deck
  /composition/decks/by-id/{deck-id}/{parameter}/reset:
    parameters:
    - description: The unique deck id to reset param on (1-based)
      in: path
      name: deck-id
      required: true
      schema:
        format: int64
        type: integer
    - description: Name of the parameter to reset
      in: path
      name: parameter
      required: true
      schema:
        type: string
    post:
      description: This resets a parameter on the indexed deck to default. If a JSON
        body is given and 'resetanimation' is set to true, animations are also reset.
      operationId: reset_deck_param_by_id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        description: Parameter reset options, whether to also reset animations
        required: false
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The given deck or parameter does not exist
      summary: Reset a parameter in a deck to its default value.
      tags:
      - deck
  /composition/decks/{deck-index}:
    delete:
      description: Remove the deck with the given index
      operationId: delete_deck
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested deck does not exist
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Remove a deck by index
      tags:
      - deck
    get:
      description: Returns a single deck
      operationId: get_deck
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deck'
          description: OK
        '404':
          content: {}
          description: The requested deck does not exist
      summary: Retrieve deck properties by index
      tags:
      - deck
    parameters:
    - description: Deck index to use (1-based)
      in: path
      name: deck-index
      required: true
      schema:
        format: int64
        type: integer
    put:
      description: Update a single deck
      operationId: replace_deck
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deck'
        description: The updated deck properties
        required: true
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The requested deck does not exist
      summary: Update specific deck by index
      tags:
      - deck
  /composition/decks/{deck-index}/duplicate:
    parameters:
    - description: Deck index to use (1-based)
      in: path
      name: deck-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Take the given deck and make a copy of it. All properties will
        be the same, except for the unique identifiers. The new deck is inserted into
        the composition next to the existing one.
      operationId: composition_duplicate_deck
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested deck does not exist
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked or still
            loading
      summary: Duplicate the given deck
      tags:
      - deck
  /composition/decks/{deck-index}/select:
    parameters:
    - description: Deck index to select (1-based)
      in: path
      name: deck-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Select the deck at the given index
      operationId: deck_select
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested deck does not exist
      summary: Select the deck by index
      tags:
      - deck
  /composition/decks/{deck-index}/{parameter}/reset:
    parameters:
    - description: Deck index to reset param on (1-based)
      in: path
      name: deck-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Name of the parameter to reset
      in: path
      name: parameter
      required: true
      schema:
        type: string
    post:
      description: This resets a parameter on the indexed deck to default. If a JSON
        body is given and 'resetanimation' is set to true, animations are also reset.
      operationId: reset_deck_param
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        description: Parameter reset options, whether to also reset animations
        required: false
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The given deck or parameter does not exist
      summary: Reset a parameter in a deck to its default value.
      tags:
      - deck
  /composition/disconnect-all:
    post:
      description: Any connected clip will be disconnected
      operationId: composition_disconnect_all
      responses:
        '204':
          description: OK
      summary: Disconnect all clips in the composition
      tags:
      - composition
  /composition/effects/by-id/{effect-id}:
    get:
      description: Finds the effect in any clip belonging to the composition
      operationId: get_effect_by_id
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/AudioEffect'
                - $ref: '#/components/schemas/VideoEffect'
          description: OK
        '404':
          content: {}
          description: The requested effect does not exist
      summary: Retrieve effect properties given their unique identifier
      tags:
      - clip
    parameters:
    - description: The unique effect id to get the thumbnail for
      in: path
      name: effect-id
      required: true
      schema:
        format: int64
        type: integer
    put:
      description: Update a single effect
      operationId: replace_effect_by_id
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/AudioEffect'
              - $ref: '#/components/schemas/VideoEffect'
        description: The updated effect properties
        required: true
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The requested effect does not exist
      summary: Update effect by id
      tags:
      - clip
  /composition/effects/by-id/{effect-id}/set-display-name:
    parameters:
    - description: The unique id of the effect to change the name for
      in: path
      name: effect-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Change the display name of the effect with the matching unique
        id
      operationId: effect_set_display_name_by_id
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        description: The new display name for the effect
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Change the display name of an effect
      tags:
      - composition
      - effects
      x-codegen-request-body-name: effect-display-name
  /composition/effects/video/add:
    post:
      description: Add a global effect, which affects everything within the composition
      operationId: add_effect_composition
      requestBody:
        content:
          text/plain:
            examples:
              blow:
                value: effect:///video/Blow
              blow-solid:
                value: effect:///video/Blow/Solid
            schema:
              type: string
        description: The effect to add to the composition
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Add an effect to the entire composition
      tags:
      - composition
      x-codegen-request-body-name: composition-add-effect
  /composition/effects/video/add/{offset}:
    parameters:
    - description: The offset at which to insert the new effect
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Add a global effect, which affects everything within the composition
      operationId: add_composition_effect_offset
      requestBody:
        content:
          text/plain:
            examples:
              blow:
                value: effect:///video/Blow
              blow-solid:
                value: effect:///video/Blow/Solid
            schema:
              type: string
        description: The effect to add to the composition
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification or incorrect offset
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Add an effect to the entire composition
      tags:
      - composition
      x-codegen-request-body-name: composition-add-effect-offset
  /composition/effects/video/move:
    post:
      description: Take an existing effect instance, and move it to the end of the
        composition
      operationId: move_effect_composition
      requestBody:
        content:
          text/plain:
            examples:
              clip-effect:
                value: /composition/layers/1/clips/5/effects/video/2
              clip-effect-by-id:
                value: /composition/clips/by-id/1658311744128/effects/video/5
              composition-effect:
                value: /composition/effects/video/3
              effect-by-id:
                value: effects/by-id/1658311809911
              layer-effect:
                value: /composition/layers/1/effects/video/2
              layer-effect-by-id:
                value: /composition/layers/by-id/1658311521181/effects/video/1
              layer-group-effect:
                value: /composition/layergroups/2/effects/video/1
              layer-group-effect-by-id:
                value: /composition/layergroups/by-id/1658311522986/effects/video/7
            schema:
              type: string
        description: The effect instance to move
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Move an effect to the end of the composition
      tags:
      - composition
      x-codegen-request-body-name: effect-instantiation-uri
  /composition/effects/video/move/{offset}:
    parameters:
    - description: The offset at which to insert the effect
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Take an existing effect instance, and move it to the index inside
        the composition
      operationId: move_effect_composition_offset
      requestBody:
        content:
          text/plain:
            examples:
              clip-effect:
                value: /composition/layers/1/clips/5/effects/video/2
              clip-effect-by-id:
                value: /composition/clips/by-id/1658311744128/effects/video/5
              composition-effect:
                value: /composition/effects/video/3
              effect-by-id:
                value: effects/by-id/1658311809911
              layer-effect:
                value: /composition/layers/1/effects/video/2
              layer-effect-by-id:
                value: /composition/layers/by-id/1658311521181/effects/video/1
              layer-group-effect:
                value: /composition/layergroups/2/effects/video/1
              layer-group-effect-by-id:
                value: /composition/layergroups/by-id/1658311522986/effects/video/7
            schema:
              type: string
        description: The effect instance to move
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Move an effect to the end of the composition
      tags:
      - composition
      x-codegen-request-body-name: effect-instantiation-uri
  /composition/effects/video/{offset}:
    delete:
      description: Remove a global effect, which affects everything within the composition
      operationId: delete_composition_effect
      responses:
        '204':
          description: OK
        '404':
          description: No effect found at the given offset
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Remove an effect from the entire composition
      tags:
      - composition
    parameters:
    - description: The offset of the effect to remove
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
  /composition/layergroups/add:
    post:
      description: This adds a new layer group either at the end, or somewhere else
        in the composition
      operationId: composition_add_layergroup
      requestBody:
        content:
          text/plain:
            examples:
              layer-by-id:
                value: /composition/layers/by-id/1658311520090
              layer-by-position:
                value: /composition/layers/3
              layer-group-by-position:
                value: /composition/layergroups/2
              layergroup-by-id:
                value: /composition/layergroups/by-id/1658387238991
            schema:
              type: string
        description: The existing layer to add the new layer group, if not given,
          a new layer will be created at the end and added to the group, or the layer
          group to add before.
      responses:
        '204':
          description: OK
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Add a new layer group to the composition
      tags:
      - layergroup
      x-codegen-request-body-name: add-layer-group
  /composition/layergroups/by-id/{layergroup-id}:
    delete:
      description: Remove the layer group with the given id
      operationId: delete_layergroup_by_id
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer group does not exist
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Remove specified layer group by id
      tags:
      - layergroup
    get:
      description: Returns a single layer group and all of its layers
      operationId: get_layergroup_by_id
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayerGroup'
          description: OK
        '404':
          content: {}
          description: The requested layer group does not exist
      summary: Retrieve layer group properties and layer info by id
      tags:
      - layergroup
    parameters:
    - description: The unique layer group id to use
      in: path
      name: layergroup-id
      required: true
      schema:
        format: int64
        type: integer
    put:
      description: Updates a single layer group and all of its layers
      operationId: replace_layergroup_by_id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LayerGroup'
        description: The updated layer group and/or layer properties
        required: true
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The requested layer group does not exist
      summary: Update specified layer and/or clips by id
      tags:
      - layergroup
  /composition/layergroups/by-id/{layergroup-id}/add-layer:
    parameters:
    - description: The unique layer group id to use
      in: path
      name: layergroup-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Create a new layer inside a layer group. If the path to an existing
        layer is given, the new layer is inserted before.
      operationId: composition_add_layer_to_group_by_id
      requestBody:
        content:
          text/plain:
            examples:
              layer-by-id:
                value: /composition/layers/by-id/1658311520090
              layer-by-position:
                value: /composition/layers/3
            schema:
              type: string
        description: The layer to inside the group to place the new layer before.
          This is the path to an existing layer, either identifier by position, or
          by unique id.
      responses:
        '204':
          description: OK
        '400':
          description: Invalid layer path given.
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Add new layer to an existing layer group
      tags:
      - layergroup
      x-codegen-request-body-name: add-layer-to-group
  /composition/layergroups/by-id/{layergroup-id}/clear:
    parameters:
    - description: The unique layer group id to clear
      in: path
      name: layergroup-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Disconnects any playing clips in the layer group by id
      operationId: layer_group_clear_by_id
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
        description: Whether to clear the layer group. This is analogous to whether
          the mouse is pressed down on the button. If omitted, true and false are
          both sent - as if a short click was generated
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer group does not exist
      summary: Disconnects any playing clips in the layer group by id
      tags:
      - layer
  /composition/layergroups/by-id/{layergroup-id}/duplicate:
    parameters:
    - description: The unique layer group id to use
      in: path
      name: layergroup-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Take the given layer group and make a copy of it. All properties
        will be the same, except for the unique identifiers. The new layer group is
        inserted into the composition below the existing one.
      operationId: composition_duplicate_layer_group_by_id
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer group does not exist
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Duplicate the given layer group
      tags:
      - layergroup
  /composition/layergroups/by-id/{layergroup-id}/effects/video/add:
    parameters:
    - description: The unique id for the layer group
      in: path
      name: layergroup-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Add an effect to the layer group with the given unique id
      operationId: add_effect_layergroup_by_id
      requestBody:
        content:
          text/plain:
            examples:
              blow:
                value: effect:///video/Blow
              blow-solid:
                value: effect:///video/Blow/Solid
            schema:
              type: string
        description: The effect to add to the layer group
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: The requested layer group does not exit
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Add an effect to a layer group by unique id
      tags:
      - layergroup
      x-codegen-request-body-name: layergroup-add-effect-by-id
  /composition/layergroups/by-id/{layergroup-id}/effects/video/add/{offset}:
    parameters:
    - description: The unique id for the layer group
      in: path
      name: layergroup-id
      required: true
      schema:
        format: int64
        type: integer
    - description: The offset at which to insert the new effect
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Add an effect to the layer group with the given unique id
      operationId: layergroup_add_effect_by_id_offset
      requestBody:
        content:
          text/plain:
            examples:
              blow:
                value: effect:///video/Blow
              blow-solid:
                value: effect:///video/Blow/Solid
            schema:
              type: string
        description: The effect to add to the layer group
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: The requested layer group does not exit
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Add an effect to a layer group by unique id
      tags:
      - layergroup
      x-codegen-request-body-name: layergroup-add-effect-by-id-offset
  /composition/layergroups/by-id/{layergroup-id}/effects/video/move:
    parameters:
    - description: The unique layer group id to use
      in: path
      name: layergroup-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Take an existing effect instance, and move it to the end of the
        layer group
      operationId: move_effect_layer_group_by_id
      requestBody:
        content:
          text/plain:
            examples:
              clip-effect:
                value: /composition/layers/1/clips/5/effects/video/2
              clip-effect-by-id:
                value: /composition/clips/by-id/1658311744128/effects/video/5
              composition-effect:
                value: /composition/effects/video/3
              effect-by-id:
                value: effects/by-id/1658311809911
              layer-effect:
                value: /composition/layers/1/effects/video/2
              layer-effect-by-id:
                value: /composition/layers/by-id/1658311521181/effects/video/1
              layer-group-effect:
                value: /composition/layergroups/2/effects/video/1
              layer-group-effect-by-id:
                value: /composition/layergroups/by-id/1658311522986/effects/video/7
            schema:
              type: string
        description: The effect instance to move
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: The requested layer group does not exist
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Move an effect to the end of the layer group
      tags:
      - layergroup
      x-codegen-request-body-name: effect-instantiation-uri
  /composition/layergroups/by-id/{layergroup-id}/effects/video/move/{offset}:
    parameters:
    - description: The unique layer group id to use
      in: path
      name: layergroup-id
      required: true
      schema:
        format: int64
        type: integer
    - description: The offset at which to insert the effect
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Take an existing effect instance, and move it to the given offset
      operationId: move_effect_layer_group_offset_by_id
      requestBody:
        content:
          text/plain:
            examples:
              clip-effect:
                value: /composition/layers/1/clips/5/effects/video/2
              clip-effect-by-id:
                value: /composition/clips/by-id/1658311744128/effects/video/5
              composition-effect:
                value: /composition/effects/video/3
              effect-by-id:
                value: effects/by-id/1658311809911
              layer-effect:
                value: /composition/layers/1/effects/video/2
              layer-effect-by-id:
                value: /composition/layers/by-id/1658311521181/effects/video/1
              layer-group-effect:
                value: /composition/layergroups/2/effects/video/1
              layer-group-effect-by-id:
                value: /composition/layergroups/by-id/1658311522986/effects/video/7
            schema:
              type: string
        description: The effect instance to move
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: The requested layer group does not exist
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Move an effect to the given offset in the layer group
      tags:
      - layergroup
      x-codegen-request-body-name: effect-instantiation-uri
  /composition/layergroups/by-id/{layergroup-id}/effects/video/{offset}:
    delete:
      description: Remove an effect from a layer group
      operationId: delete_layer_group_effect_by_id
      responses:
        '204':
          description: OK
        '404':
          description: No effect found at the given offset or no matching layer group
            is found
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Remove an effect from a layer group
      tags:
      - layergroup
    parameters:
    - description: The unique id for the layer group
      in: path
      name: layergroup-id
      required: true
      schema:
        format: int64
        type: integer
    - description: The offset of the effect to remove
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
  /composition/layergroups/by-id/{layergroup-id}/move-layer:
    parameters:
    - description: The unique layer group id to use
      in: path
      name: layergroup-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Given an existing layer, identified by the path in the body, move
        it into the layer group at the given position in the composition.
      operationId: composition_move_layer_to_group_by_id
      requestBody:
        content:
          text/plain:
            examples:
              layer-by-id:
                value: /composition/layers/by-id/1658311520090
              layer-by-position:
                value: /composition/layers/3
            schema:
              type: string
        description: The layer to move into the group. This is the path to an existing
          layer, either identifier by position, or by unique id.
      responses:
        '204':
          description: OK
        '400':
          description: Invalid layer path given.
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Add an existing layer to an existing layer group
      tags:
      - layergroup
      x-codegen-request-body-name: move-layer-to-group
  /composition/layergroups/by-id/{layergroup-id}/select:
    parameters:
    - description: The unique layer group id to select
      in: path
      name: layergroup-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Select the layer group with the given id
      operationId: layergroup_select_by_id
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer group does not exist
      summary: Select the layer group by id
      tags:
      - layergroup
  /composition/layergroups/by-id/{layergroup-id}/{parameter}/reset:
    parameters:
    - description: The unique layer group id to reset param on (1-based)
      in: path
      name: layergroup-id
      required: true
      schema:
        format: int64
        type: integer
    - description: Name of the parameter to reset
      in: path
      name: parameter
      required: true
      schema:
        type: string
    post:
      description: This resets a parameter on the indexed layer group to default.
        If a JSON body is given and 'resetanimation' is set to true, animations are
        also reset.
      operationId: reset_layer_group_param_by_id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        description: Parameter reset options, whether to also reset animations
        required: false
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The given layer group or parameter does not exist
      summary: Reset a parameter in a layer group to its default value.
      tags:
      - layergroup
  /composition/layergroups/selected:
    delete:
      description: If a layer group is selected, it will be removed
      operationId: delete_selected_layer_group
      responses:
        '204':
          description: OK
        '404':
          description: No layer group selected.
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Remove the selected layer group
      tags:
      - layergroup
    get:
      description: Returns a single layer group and all of its layers
      operationId: list_selected_layergroup
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayerGroup'
          description: OK
        '404':
          content: {}
          description: No selected layer group was found
      summary: Retrieve selected layer group properties and layer info
      tags:
      - layergroup
    put:
      description: Updates a single layer group and all of its layers
      operationId: replace_selected_layergroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LayerGroup'
        description: The updated layer group and/or layer properties
        required: true
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: No selected layer group was found
      summary: Update selected layer group and/or layers
      tags:
      - layergroup
  /composition/layergroups/selected/add-layer:
    post:
      description: Create a new layer inside a layer group. If the path to an existing
        layer is given, the new layer is inserted before.
      operationId: composition_add_layer_to_selected_group
      requestBody:
        content:
          text/plain:
            examples:
              layer-by-id:
                value: /composition/layers/by-id/1658311520090
              layer-by-position:
                value: /composition/layers/3
            schema:
              type: string
        description: The layer to inside the group to place the new layer before.
          This is the path to an existing layer, either identifier by position, or
          by unique id.
      responses:
        '204':
          description: OK
        '400':
          description: Invalid layer path given.
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Add new layer to the selected layer group
      tags:
      - layergroup
      x-codegen-request-body-name: add-layer-to-group
  /composition/layergroups/selected/clear:
    post:
      description: Disconnects any playing clips in the selected layer group
      operationId: selected_layer_group_clear
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
        description: Whether to clear the layer group. This is analogous to whether
          the mouse is pressed down on the button. If omitted, true and false are
          both sent - as if a short click was generated
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: Selected layer not found
      summary: Disconnects any playing clips in the selected layer group
      tags:
      - layergroup
  /composition/layergroups/selected/duplicate:
    post:
      description: Take the selected layer group and make a copy of it. All properties
        will be the same, except for the unique identifiers. The new layer group is
        inserted into the composition below the existing one.
      operationId: composition_duplicate_selected_layer_group
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer group does not exist
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Duplicate the selected layer group
      tags:
      - layergroup
  /composition/layergroups/selected/effects/video/add:
    post:
      description: Add an effect to the selected layer group
      operationId: add_effect_selected_layergroup
      requestBody:
        content:
          text/plain:
            examples:
              blow:
                value: effect:///video/Blow
              blow-solid:
                value: effect:///video/Blow/Solid
            schema:
              type: string
        description: The effect to add to the layer group
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: No selected layer group was found
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Add an effect to the selected layer group
      tags:
      - layergroup
      x-codegen-request-body-name: layergroup-add-effect
  /composition/layergroups/selected/effects/video/add/{offset}:
    parameters:
    - description: The offset at which to insert the new effect
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Add an effect to the selected layer group
      operationId: selected_layergroup_add_effect_offset
      requestBody:
        content:
          text/plain:
            examples:
              blow:
                value: effect:///video/Blow
              blow-solid:
                value: effect:///video/Blow/Solid
            schema:
              type: string
        description: The effect to add to the layer group
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: No selected layer group was found
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Add an effect to the selected layer group
      tags:
      - layergroup
      x-codegen-request-body-name: layergroup-add-effect-offset
  /composition/layergroups/selected/effects/video/{offset}:
    delete:
      description: Remove an effect from a layer group
      operationId: delete_selected_layer_group_effect
      responses:
        '204':
          description: OK
        '404':
          description: No effect found at the given offset or no layer group is selected
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Remove an effect from a layer group
      tags:
      - layergroup
    parameters:
    - description: The offset of the effect to remove
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
  /composition/layergroups/selected/move-layer:
    post:
      description: Given an existing layer, identified by the path in the body, move
        it into the currently selected layer group.
      operationId: composition_move_layer_to_selected_group
      requestBody:
        content:
          text/plain:
            examples:
              layer-by-id:
                value: /composition/layers/by-id/1658311520090
              layer-by-position:
                value: /composition/layers/3
            schema:
              type: string
        description: The layer to move into the group. This is the path to an existing
          layer, either identifier by position, or by unique id.
      responses:
        '204':
          description: OK
        '400':
          description: Invalid layer path given.
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Add an existing layer to the selected layer group
      tags:
      - layergroup
      x-codegen-request-body-name: move-layer-to-group
  /composition/layergroups/selected/{parameter}/reset:
    parameters:
    - description: Name of the parameter to reset
      in: path
      name: parameter
      required: true
      schema:
        type: string
    post:
      description: This resets a parameter on the selected layer group to default.
        If a JSON body is given and 'resetanimation' is set to true, animations are
        also reset.
      operationId: reset_selected_layer_group_param
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        description: Parameter reset options, whether to also reset animations
        required: false
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: No selected layer group found or parameter does not exist
      summary: Reset a parameter in the selected layer group to its default value.
      tags:
      - layergroup
  /composition/layergroups/{layergroup-index}:
    delete:
      description: Remove the layer group with the given index
      operationId: delete_layer_group
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer group does not exist
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Remove a layer group by index
      tags:
      - layergroup
    get:
      description: Returns a single layer group and all of its layers
      operationId: get_layergroup
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayerGroup'
          description: OK
        '404':
          content: {}
          description: The requested layer group does not exist
      summary: Retrieve layer group properties and layer info by index
      tags:
      - layergroup
    parameters:
    - description: Layer group index to use (1-based)
      in: path
      name: layergroup-index
      required: true
      schema:
        format: int64
        type: integer
    put:
      description: Updates a single layer group and all of its layers
      operationId: replace_layergroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LayerGroup'
        description: The updated layer group and/or layer properties
        required: true
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The requested layer group does not exist
      summary: Update specified layer group and/or layers by index
      tags:
      - layergroup
  /composition/layergroups/{layergroup-index}/add-layer:
    parameters:
    - description: Layer group index to use (1-based)
      in: path
      name: layergroup-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Create a new layer inside a layer group. If the path to an existing
        layer is given, the new layer is inserted before.
      operationId: composition_add_layer_to_group
      requestBody:
        content:
          text/plain:
            examples:
              layer-by-id:
                value: /composition/layers/by-id/1658311520090
              layer-by-position:
                value: /composition/layers/3
            schema:
              type: string
        description: The layer to inside the group to place the new layer before.
          This is the path to an existing layer, either identifier by position, or
          by unique id.
      responses:
        '204':
          description: OK
        '400':
          description: Invalid layer path given.
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Add a new layer to an existing layer group
      tags:
      - layergroup
      x-codegen-request-body-name: add-layer-to-group
  /composition/layergroups/{layergroup-index}/clear:
    parameters:
    - description: Layer group index to clear (1-based)
      in: path
      name: layergroup-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Disconnects any playing clips in the layer group by index
      operationId: layer_group_clear
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
        description: Whether to clear the layer group. This is analogous to whether
          the mouse is pressed down on the button. If omitted, true and false are
          both sent - as if a short click was generated
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer group does not exist
      summary: Disconnects any playing clips in the layer group by index
      tags:
      - layergroup
  /composition/layergroups/{layergroup-index}/columns/{column-index}:
    get:
      description: Returns a single column from the requested layer group
      operationId: get_layergroup_column
      responses:
        '200':
          content:
            /application/json:
              schema:
                $ref: '#/components/schemas/Column'
          description: OK
      summary: Retrieve the column inside the layer group
      tags:
      - layergroup
    parameters:
    - description: Layer group index to use (1-based)
      in: path
      name: layergroup-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Column index to use (1-based)
      in: path
      name: column-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Update the column inside the specified layer group by its position
        inside the composition
      operationId: replace_layergroup_column
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Column'
        description: The updated layer group column properties
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The requested layer group or column does not exist
      summary: Update layer group column
      tags:
      - layergroup
  /composition/layergroups/{layergroup-index}/columns/{column-index}/connect:
    parameters:
    - description: Layer group index to use (1-based)
      in: path
      name: layergroup-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Column index to connect (1-based)
      in: path
      name: column-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Connect the column, possibly activating it
      operationId: layer_group_column_connect
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
        description: Whether to connect the column. This is analogous to whether the
          mouse is pressed down on the column. If omitted, true and false are both
          send - as if a short click was generated
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer group or column does not exist
      summary: Connect the column in the layergroup by index
      tags:
      - layergroup
  /composition/layergroups/{layergroup-index}/columns/{column-index}/select:
    parameters:
    - description: Layer group index to use (1-based)
      in: path
      name: layergroup-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Column index to select (1-based)
      in: path
      name: column-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Select the column
      operationId: layer_group_column_select
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer group or column does not exist
      summary: Select the column in the layergroup by index
      tags:
      - layergroup
  /composition/layergroups/{layergroup-index}/duplicate:
    parameters:
    - description: Layer group index to use (1-based)
      in: path
      name: layergroup-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Take the given layer group and make a copy of it. All properties
        will be the same, except for the unique identifiers. The new layer group is
        inserted into the composition below the existing one.
      operationId: composition_duplicate_layer_group
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer group does not exist
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Duplicate the given layer group
      tags:
      - layergroup
  /composition/layergroups/{layergroup-index}/effects/video/add:
    parameters:
    - description: Layer group index to use (1-based)
      in: path
      name: layergroup-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Add an effect to the layer group at the specified index
      operationId: add_effect_layergroup
      requestBody:
        content:
          text/plain:
            examples:
              blow:
                value: effect:///video/Blow
              blow-solid:
                value: effect:///video/Blow/Solid
            schema:
              type: string
        description: The effect to add to the layer group
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: The requested layer group does not exit
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Add an effect to a layer group by index
      tags:
      - layergroup
      x-codegen-request-body-name: layergroup-add-effect
  /composition/layergroups/{layergroup-index}/effects/video/add/{offset}:
    parameters:
    - description: Layer group index to use (1-based)
      in: path
      name: layergroup-index
      required: true
      schema:
        format: int64
        type: integer
    - description: The offset at which to insert the new effect
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Add an effect to the layer group at the specified index
      operationId: layergroup_add_effect_offset
      requestBody:
        content:
          text/plain:
            examples:
              blow:
                value: effect:///video/Blow
              blow-solid:
                value: effect:///video/Blow/Solid
            schema:
              type: string
        description: The effect to add to the layer group
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: The requested layer group does not exit
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Add an effect to a layer group by index
      tags:
      - layergroup
      x-codegen-request-body-name: layergroup-add-effect
  /composition/layergroups/{layergroup-index}/effects/video/move:
    parameters:
    - description: Layer group index to use (1-based)
      in: path
      name: layergroup-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Take an existing effect instance, and move it to the end of the
        layer group
      operationId: move_effect_layer_group
      requestBody:
        content:
          text/plain:
            examples:
              clip-effect:
                value: /composition/layers/1/clips/5/effects/video/2
              clip-effect-by-id:
                value: /composition/clips/by-id/1658311744128/effects/video/5
              composition-effect:
                value: /composition/effects/video/3
              effect-by-id:
                value: effects/by-id/1658311809911
              layer-effect:
                value: /composition/layers/1/effects/video/2
              layer-effect-by-id:
                value: /composition/layers/by-id/1658311521181/effects/video/1
              layer-group-effect:
                value: /composition/layergroups/2/effects/video/1
              layer-group-effect-by-id:
                value: /composition/layergroups/by-id/1658311522986/effects/video/7
            schema:
              type: string
        description: The effect instance to move
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: The requested layer group does not exist
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Move an effect to the end of the layer group
      tags:
      - layergroup
      x-codegen-request-body-name: effect-instantiation-uri
  /composition/layergroups/{layergroup-index}/effects/video/move/{offset}:
    parameters:
    - description: Layer group index to use (1-based)
      in: path
      name: layergroup-index
      required: true
      schema:
        format: int64
        type: integer
    - description: The offset at which to insert the effect
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Take an existing effect instance, and move it to the given offset
      operationId: move_effect_layer_group_offset
      requestBody:
        content:
          text/plain:
            examples:
              clip-effect:
                value: /composition/layers/1/clips/5/effects/video/2
              clip-effect-by-id:
                value: /composition/clips/by-id/1658311744128/effects/video/5
              composition-effect:
                value: /composition/effects/video/3
              effect-by-id:
                value: effects/by-id/1658311809911
              layer-effect:
                value: /composition/layers/1/effects/video/2
              layer-effect-by-id:
                value: /composition/layers/by-id/1658311521181/effects/video/1
              layer-group-effect:
                value: /composition/layergroups/2/effects/video/1
              layer-group-effect-by-id:
                value: /composition/layergroups/by-id/1658311522986/effects/video/7
            schema:
              type: string
        description: The effect instance to move
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: The requested layer group does not exist
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Move an effect to the given offset in the layer group
      tags:
      - layergroup
      x-codegen-request-body-name: effect-instantiation-uri
  /composition/layergroups/{layergroup-index}/effects/video/{effect-index}/set-display-name:
    parameters:
    - description: Layer group index to use (1-based)
      in: path
      name: layergroup-index
      required: true
      schema:
        format: int64
        type: integer
    - description: The index of the video effect within the layer group
      in: path
      name: effect-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Change the display name of the effect with the given offset in
        the layer group
      operationId: video_effect_set_display_name_layer_group
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        description: The new display name for the effect
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Change the display name of an effect
      tags:
      - layergroup
      - effects
      x-codegen-request-body-name: effect-display-name
  /composition/layergroups/{layergroup-index}/effects/video/{offset}:
    delete:
      description: Remove an effect from a layer group
      operationId: delete_layer_group_effect
      responses:
        '204':
          description: OK
        '404':
          description: No effect found at the given offset or no matching layer group
            was found
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Remove an effect from a layer group
      tags:
      - layergroup
    parameters:
    - description: Layer group index to use (1-based)
      in: path
      name: layergroup-index
      required: true
      schema:
        format: int64
        type: integer
    - description: The offset of the effect to remove
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
  /composition/layergroups/{layergroup-index}/move-layer:
    parameters:
    - description: Layer group index to use (1-based)
      in: path
      name: layergroup-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Given an existing layer, identified by the path in the body, move
        it into the layer group at the given position in the composition.
      operationId: composition_move_layer_to_group
      requestBody:
        content:
          text/plain:
            examples:
              layer-by-id:
                value: /composition/layers/by-id/1658311520090
              layer-by-position:
                value: /composition/layers/3
            schema:
              type: string
        description: The layer to move into the group. This is the path to an existing
          layer, either identifier by position, or by unique id.
      responses:
        '204':
          description: OK
        '400':
          description: Invalid layer path given.
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Add an existing layer to an existing layer group
      tags:
      - layergroup
      x-codegen-request-body-name: move-layer-to-group
  /composition/layergroups/{layergroup-index}/select:
    parameters:
    - description: Layer group index to select (1-based)
      in: path
      name: layergroup-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Select the layer group at the given index
      operationId: layergroup_select
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer group does not exist
      summary: Select the layer group by index
      tags:
      - layergroup
  /composition/layergroups/{layergroup-index}/{parameter}/reset:
    parameters:
    - description: Layer group index to reset param on (1-based)
      in: path
      name: layergroup-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Name of the parameter to reset
      in: path
      name: parameter
      required: true
      schema:
        type: string
    post:
      description: This resets a parameter on the indexed layer group to default.
        If a JSON body is given and 'resetanimation' is set to true, animations are
        also reset.
      operationId: reset_layer_group_param
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        description: Parameter reset options, whether to also reset animations
        required: false
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The given layer group or parameter does not exist
      summary: Reset a parameter in a layer group to its default value.
      tags:
      - layergroup
  /composition/layers/add:
    post:
      description: This adds a new layer either at the end, or somewhere else in the
        composition
      operationId: composition_add_layer
      requestBody:
        content:
          text/plain:
            examples:
              layer-by-id:
                value: /composition/layers/by-id/1658311520090
              layer-by-position:
                value: /composition/layers/3
            schema:
              type: string
        description: The existing layer to add the new layer before, if not given,
          the new layer will be added at the end
      responses:
        '204':
          description: OK
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Add a new layer to the composition
      tags:
      - layer
      x-codegen-request-body-name: add-layer
  /composition/layers/by-id/{layer-id}:
    delete:
      description: Remove the layer with the given id
      operationId: delete_layer_by_id
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer does not exist
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Remove specified layer by id
      tags:
      - layer
    get:
      description: Returns a single layer and all of its clips
      operationId: get_layer_by_id
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Layer'
          description: OK
        '404':
          content: {}
          description: The requested layer does not exist
      summary: Retrieve layer properties and clip info by id
      tags:
      - layer
    parameters:
    - description: The unique layer id to use
      in: path
      name: layer-id
      required: true
      schema:
        format: int64
        type: integer
    put:
      description: Updates a single layer and all of its clips
      operationId: replace_layer_by_id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Layer'
        description: The updated layer and/or clip properties
        required: true
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The requested layer does not exist
      summary: Update specified layer and/or clips by id
      tags:
      - layer
  /composition/layers/by-id/{layer-id}/clear:
    parameters:
    - description: The unique layer id to clear
      in: path
      name: layer-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Disconnects any playing clips in the layer by id
      operationId: layer_clear_by_id
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer does not exist
      summary: Disconnects any playing clips in the layer by id
      tags:
      - layer
  /composition/layers/by-id/{layer-id}/clearclips:
    parameters:
    - description: The unique layer id to clear clips from
      in: path
      name: layer-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Clears all clips in the layer by id, removing all tracks and settings
        from the clips
      operationId: layer_clear_clips_by_id
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer does not exist
      summary: Clears all clips in the layer by id
      tags:
      - layer
  /composition/layers/by-id/{layer-id}/duplicate:
    parameters:
    - description: The unique layer id to use
      in: path
      name: layer-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Take the given layer and make a copy of it. All properties will
        be the same, except for the unique identifiers. The new layer is inserted
        into the composition below the existing one.
      operationId: composition_duplicate_layer_by_id
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer does not exist
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Duplicate the given layer
      tags:
      - layer
  /composition/layers/by-id/{layer-id}/effects/video/add:
    parameters:
    - description: The unique layer id to use
      in: path
      name: layer-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Add an effect to the layer with the given unique id
      operationId: add_effect_layer_by_id
      requestBody:
        content:
          text/plain:
            examples:
              blow:
                value: effect:///video/Blow
              blow-solid:
                value: effect:///video/Blow/Solid
            schema:
              type: string
        description: The effect to add to the layer
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: The requested layer does not exit
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Add an effect to a layer by unique id
      tags:
      - layer
      x-codegen-request-body-name: layer-add-effect-by-id
  /composition/layers/by-id/{layer-id}/effects/video/add/{offset}:
    parameters:
    - description: The unique layer id to use
      in: path
      name: layer-id
      required: true
      schema:
        format: int64
        type: integer
    - description: The offset at which to insert the new effect
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Add an effect to the layer with the given unique id
      operationId: layer_add_effect_by_id_offset
      requestBody:
        content:
          text/plain:
            examples:
              blow:
                value: effect:///video/Blow
              blow-solid:
                value: effect:///video/Blow/Solid
            schema:
              type: string
        description: The effect to add to the layer
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification or incorrect offset
        '404':
          content: {}
          description: The requested layer does not exit
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Add an effect to the layer with the given id, at the given offset
      tags:
      - layer
      x-codegen-request-body-name: layer-add-effect-by-id-offset
  /composition/layers/by-id/{layer-id}/effects/video/move:
    parameters:
    - description: The unique layer id to use
      in: path
      name: layer-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Take an existing effect instance, and move it to the end of the
        layer
      operationId: move_effect_layer_by_id
      requestBody:
        content:
          text/plain:
            examples:
              clip-effect:
                value: /composition/layers/1/clips/5/effects/video/2
              clip-effect-by-id:
                value: /composition/clips/by-id/1658311744128/effects/video/5
              composition-effect:
                value: /composition/effects/video/3
              effect-by-id:
                value: effects/by-id/1658311809911
              layer-effect:
                value: /composition/layers/1/effects/video/2
              layer-effect-by-id:
                value: /composition/layers/by-id/1658311521181/effects/video/1
              layer-group-effect:
                value: /composition/layergroups/2/effects/video/1
              layer-group-effect-by-id:
                value: /composition/layergroups/by-id/1658311522986/effects/video/7
            schema:
              type: string
        description: The effect instance to move
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: The requested layer does not exist
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Move an effect to the end of a layer
      tags:
      - layer
      x-codegen-request-body-name: effect-instantiation-uri
  /composition/layers/by-id/{layer-id}/effects/video/move/{offset}:
    parameters:
    - description: The unique layer id to use
      in: path
      name: layer-id
      required: true
      schema:
        format: int64
        type: integer
    - description: The offset at which to insert the effect
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Take an existing effect instance, and move it to the given offset
      operationId: move_effect_layer_offset_by_id
      requestBody:
        content:
          text/plain:
            examples:
              clip-effect:
                value: /composition/layers/1/clips/5/effects/video/2
              clip-effect-by-id:
                value: /composition/clips/by-id/1658311744128/effects/video/5
              composition-effect:
                value: /composition/effects/video/3
              effect-by-id:
                value: effects/by-id/1658311809911
              layer-effect:
                value: /composition/layers/1/effects/video/2
              layer-effect-by-id:
                value: /composition/layers/by-id/1658311521181/effects/video/1
              layer-group-effect:
                value: /composition/layergroups/2/effects/video/1
              layer-group-effect-by-id:
                value: /composition/layergroups/by-id/1658311522986/effects/video/7
            schema:
              type: string
        description: The effect instance to move
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: The requested layer does not exist
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Move an effect to a specific offset inside the layer
      tags:
      - layer
      x-codegen-request-body-name: effect-instantiation-uri
  /composition/layers/by-id/{layer-id}/effects/video/{offset}:
    delete:
      description: Remove an effect from a layer
      operationId: delete_layer_effect_by_id
      responses:
        '204':
          description: OK
        '404':
          description: No effect found at the given offset or no matching layer was
            found
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Remove an effect from a layer
      tags:
      - layer
    parameters:
    - description: The unique layer id to use
      in: path
      name: layer-id
      required: true
      schema:
        format: int64
        type: integer
    - description: The offset of the effect to remove
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
  /composition/layers/by-id/{layer-id}/select:
    parameters:
    - description: The unique layer id to update
      in: path
      name: layer-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Select the layer with the given id
      operationId: layer_select_by_id
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer does not exist
      summary: Select the layer by id
      tags:
      - layer
  /composition/layers/by-id/{layer-id}/{parameter}/reset:
    parameters:
    - description: The unique layer id to reset param on (1-based)
      in: path
      name: layer-id
      required: true
      schema:
        format: int64
        type: integer
    - description: Name of the parameter to reset
      in: path
      name: parameter
      required: true
      schema:
        type: string
    post:
      description: This resets a parameter on the indexed layer to default. If a JSON
        body is given and 'resetanimation' is set to true, animations are also reset.
      operationId: reset_layer_param_by_id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        description: Parameter reset options, whether to also reset animations
        required: false
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The given layer or parameter does not exist
      summary: Reset a parameter in a layer to its default value.
      tags:
      - layer
  /composition/layers/selected:
    get:
      description: Returns a single layer and all of its clips
      operationId: list_selected_layer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Layer'
          description: OK
        '404':
          content: {}
          description: No selected layer was found
      summary: Retrieve layer properties and clip info for the selected layers
      tags:
      - layer
    put:
      description: Updates a single layer and all of its clips
      operationId: replace_selected_layer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Layer'
        description: The updated layer and/or clip properties
        required: true
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: No selected layer was found
      summary: Update selected layer and/or clips
      tags:
      - layer
  /composition/layers/selected/clear:
    post:
      description: Disconnects any playing clips in the selected layer
      operationId: selected_layer_clear
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: Selected layer not found
      summary: Disconnects any playing clips in the selected layer
      tags:
      - layer
  /composition/layers/selected/clearclips:
    post:
      description: Clears all clips in the selected layer, removing all tracks and
        settings from the clips
      operationId: selected_layer_clear_clips
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: Selected layer not found
      summary: Clears all clips in the selected layer
      tags:
      - layer
  /composition/layers/selected/duplicate:
    post:
      description: Take the selected layer and make a copy of it. All properties will
        be the same, except for the unique identifiers. The new layer is inserted
        into the composition below the existing one.
      operationId: composition_duplicate_selected_layer
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: No selected layer was found
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Duplicate the selected layer
      tags:
      - layer
  /composition/layers/selected/effects/video/add:
    post:
      description: Add an effect to the currently selected layer
      operationId: add_effect_selected_layer
      requestBody:
        content:
          text/plain:
            examples:
              blow:
                value: effect:///video/Blow
              blow-solid:
                value: effect:///video/Blow/Solid
            schema:
              type: string
        description: The effect to add to the layer
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: No selected layer was found
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Add an effect to the selected layer
      tags:
      - layer
      x-codegen-request-body-name: selected-layer-add-effect
  /composition/layers/selected/effects/video/add/{offset}:
    parameters:
    - description: The offset at which to insert the new effect
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Add an effect at the given offset to the currently selected layer
      operationId: selected_layer_add_effect_offset
      requestBody:
        content:
          text/plain:
            examples:
              blow:
                value: effect:///video/Blow
              blow-solid:
                value: effect:///video/Blow/Solid
            schema:
              type: string
        description: The effect to add to the layer
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: No selected layer was found
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Add an effect at the given offset to the selected layer
      tags:
      - layer
      x-codegen-request-body-name: selected-layer-add-effect-offset
  /composition/layers/selected/effects/video/{offset}:
    delete:
      description: Remove an effect from a layer
      operationId: delete_selected_layer_effect
      responses:
        '204':
          description: OK
        '404':
          description: No effect found at the given offset or there is no selected
            layer
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Remove an effect from a layer
      tags:
      - layer
    parameters:
    - description: The offset of the effect to remove
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
  /composition/layers/selected/{parameter}/reset:
    parameters:
    - description: Name of the parameter to reset
      in: path
      name: parameter
      required: true
      schema:
        type: string
    post:
      description: This resets a parameter on the selected layer to default. If a
        JSON body is given and 'resetanimation' is set to true, animations are also
        reset.
      operationId: reset_selected_layer_param
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        description: Parameter reset options, whether to also reset animations
        required: false
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: No selected layer found or parameter does not exist
      summary: Reset a parameter in the selected layer to its default value.
      tags:
      - layer
  /composition/layers/{layer-index}:
    delete:
      description: Remove the layer with the given index
      operationId: delete_layer
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer does not exist
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Remove a layer by index
      tags:
      - layer
    get:
      description: Returns a single layer and all of its clips
      operationId: get_layer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Layer'
          description: OK
        '404':
          content: {}
          description: The requested layer does not exist
      summary: Retrieve layer properties and clip info by index
      tags:
      - layer
    parameters:
    - description: Layer index to use (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    put:
      description: Updates a single layer and all of its clips
      operationId: replace_layer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Layer'
        description: The updated layer and/or clip properties
        required: true
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The requested layer does not exist
      summary: Update specified layer and/or clips by index
      tags:
      - layer
  /composition/layers/{layer-index}/clear:
    parameters:
    - description: Layer index to clear (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Disconnects any playing clips in the layer by index
      operationId: layer_clear
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer does not exist
      summary: Disconnects any playing clips in the layer by index
      tags:
      - layer
  /composition/layers/{layer-index}/clearclips:
    parameters:
    - description: Layer index to clear clips from (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Clears all clips in the layer by index, removing all tracks and
        settings from the clips
      operationId: layer_clear_clips
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer does not exist
      summary: Clears all clips in the layer by index
      tags:
      - layer
  /composition/layers/{layer-index}/clips/{clip-index}:
    get:
      description: Retrieve all clip information and associated effects
      operationId: get_clip_by_position
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clip'
          description: OK
        '404':
          content: {}
          description: The requested layer or clip does not exist
      summary: Retrieve a clip by its position in the clip grid
      tags:
      - clip
    parameters:
    - description: Layer index to retrieve (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Clip index to retrieve (1-based)
      in: path
      name: clip-index
      required: true
      schema:
        format: int64
        type: integer
    put:
      description: Update a single clip and its effects
      operationId: replace_clip_by_position
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clip'
        description: The updated clip and/or effect properties
        required: true
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The requested layer or clip does not exist
      summary: Update clip and/or its effects by position in the clip grid
      tags:
      - clip
  /composition/layers/{layer-index}/clips/{clip-index}/clear:
    parameters:
    - description: Layer index to retrieve (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Clip index to retrieve (1-based)
      in: path
      name: clip-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Clears the clip, removing all tracks and settings
      operationId: clip_clear
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer or clip does not exist
      summary: Clears the clip by its position in the clip grid
      tags:
      - clip
  /composition/layers/{layer-index}/clips/{clip-index}/connect:
    parameters:
    - description: Layer index to retrieve (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Clip index to retrieve (1-based)
      in: path
      name: clip-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Connect the clip, possibly activating it
      operationId: clip_connect
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
        description: Whether to connect the clip. This is analogous to whether the
          mouse is pressed down on the clip. If omitted, true and false are both send
          - as if a short click was generated
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer or clip does not exist
      summary: Connect the clip by its position in the clip grid
      tags:
      - clip
      x-codegen-request-body-name: connect-clip
  /composition/layers/{layer-index}/clips/{clip-index}/effects/video/add:
    parameters:
    - description: Layer index to use (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Clip index to retrieve (1-based)
      in: path
      name: clip-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Add an effect to a clip at the specified position
      operationId: add_effect_clip
      requestBody:
        content:
          text/plain:
            examples:
              blow:
                value: effect:///video/Blow
              blow-solid:
                value: effect:///video/Blow/Solid
            schema:
              type: string
        description: The effect to add to the clip
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: The requested clip does not exit
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Add an effect to a clip by its position in the clip grid
      tags:
      - clip
      x-codegen-request-body-name: clip-add-effect
  /composition/layers/{layer-index}/clips/{clip-index}/effects/video/add/{offset}:
    parameters:
    - description: Layer index to use (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Clip index to retrieve (1-based)
      in: path
      name: clip-index
      required: true
      schema:
        format: int64
        type: integer
    - description: The offset at which to insert the new effect
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Add an effect to the clip at the specified position
      operationId: clip_add_effect_offset
      requestBody:
        content:
          text/plain:
            examples:
              blow:
                value: effect:///video/Blow
              blow-solid:
                value: effect:///video/Blow/Solid
            schema:
              type: string
        description: The effect to add to the clip
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification or incorrect offset
        '404':
          content: {}
          description: The requested clip does not exit
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Add an effect to a clip by its position in the clip grid
      tags:
      - clip
      x-codegen-request-body-name: clip-add-effect-offset
  /composition/layers/{layer-index}/clips/{clip-index}/effects/video/move:
    parameters:
    - description: Layer index to use (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Clip index to use (1-based)
      in: path
      name: clip-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Take an existing effect instance, and move it to the end of the
        clip
      operationId: move_effect_clip
      requestBody:
        content:
          text/plain:
            examples:
              clip-effect:
                value: /composition/layers/1/clips/5/effects/video/2
              clip-effect-by-id:
                value: /composition/clips/by-id/1658311744128/effects/video/5
              composition-effect:
                value: /composition/effects/video/3
              effect-by-id:
                value: effects/by-id/1658311809911
              layer-effect:
                value: /composition/layers/1/effects/video/2
              layer-effect-by-id:
                value: /composition/layers/by-id/1658311521181/effects/video/1
              layer-group-effect:
                value: /composition/layergroups/2/effects/video/1
              layer-group-effect-by-id:
                value: /composition/layergroups/by-id/1658311522986/effects/video/7
            schema:
              type: string
        description: The effect instance to move
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: The requested clip does not exist
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Move an effect to the end of the clip
      tags:
      - clip
      x-codegen-request-body-name: effect-instantiation-uri
  /composition/layers/{layer-index}/clips/{clip-index}/effects/video/move/{offset}:
    parameters:
    - description: Layer index to use (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Clip index to use (1-based)
      in: path
      name: clip-index
      required: true
      schema:
        format: int64
        type: integer
    - description: The offset at which to insert the effect
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Take an existing effect instance, and move it to the given offset
      operationId: move_effect_clip_offset
      requestBody:
        content:
          text/plain:
            examples:
              clip-effect:
                value: /composition/layers/1/clips/5/effects/video/2
              clip-effect-by-id:
                value: /composition/clips/by-id/1658311744128/effects/video/5
              composition-effect:
                value: /composition/effects/video/3
              effect-by-id:
                value: effects/by-id/1658311809911
              layer-effect:
                value: /composition/layers/1/effects/video/2
              layer-effect-by-id:
                value: /composition/layers/by-id/1658311521181/effects/video/1
              layer-group-effect:
                value: /composition/layergroups/2/effects/video/1
              layer-group-effect-by-id:
                value: /composition/layergroups/by-id/1658311522986/effects/video/7
            schema:
              type: string
        description: The effect instance to move
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: The requested clip does not exist
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Move an effect to the given index in the clip
      tags:
      - clip
      x-codegen-request-body-name: effect-instantiation-uri
  /composition/layers/{layer-index}/clips/{clip-index}/effects/video/{effect-index}/set-display-name:
    parameters:
    - description: Layer index to use (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Clip index to use (1-based)
      in: path
      name: clip-index
      required: true
      schema:
        format: int64
        type: integer
    - description: The index of the video effect within the clip
      in: path
      name: effect-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Change the display name of the effect with the given offset in
        the clip
      operationId: video_effect_set_display_name_clip
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        description: The new display name for the effect
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Change the display name of an effect
      tags:
      - clip
      - effects
      x-codegen-request-body-name: effect-display-name
  /composition/layers/{layer-index}/clips/{clip-index}/effects/video/{offset}:
    delete:
      description: Remove an effect from a clip
      operationId: delete_clip_effect
      responses:
        '204':
          description: OK
        '404':
          description: No effect found at the given offset or no matching clip is
            found
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Remove an effect from a clip
      tags:
      - clip
    parameters:
    - description: Layer index to use (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Clip index to retrieve (1-based)
      in: path
      name: clip-index
      required: true
      schema:
        format: int64
        type: integer
    - description: The offset of the effect to remove
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
  /composition/layers/{layer-index}/clips/{clip-index}/open:
    parameters:
    - description: Layer index to retrieve (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Clip index to retrieve (1-based)
      in: path
      name: clip-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Loads a file or opens a source into a clip, will retain settings
        as much as possible
      operationId: clip_open
      requestBody:
        content:
          text/plain:
            examples:
              mac-open-file:
                value: file:///Users/Resolume/file%201.mov
              open-video-source:
                value: source:///video/Checkered
              open-video-source-preset:
                value: source:///video/Checkered/12345
              windows-open-file:
                value: file:///C:/Users/Resolume/file%201.mov
            schema:
              type: string
        description: 'The path to the file, in URL format, or a source URL. Special
          characters are to be encoded using URL-encoding.

          As an example, to open a file with path `/Users/Resolume/file 1.mov` you''d
          use an URL like `file:///Users/Resolume/file%201.mov`.

          On Windows id''d be something like `file:///C:/Users/Resolume/file%201.mov`.
          Note that three forward slashes are needed after the

          `file:` part, even on Windows. Opening a source uses the following format:
          `source:///video/<source name>`, an optional

          preset name can be added, `source:///video/<source name>/<preset id>`

          '
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The given clip URL is invalid
        '404':
          content: {}
          description: The requested layer or clip does not exist
        '412':
          content:
            text/plain:
              schema:
                example: the clip cannot be changed currently
                type: string
          description: A precondition failed, the clip cannot be loaded
      summary: Loads a file or opens a source into a clip by its position in the clip
        grid
      tags:
      - clip
      x-codegen-request-body-name: clip-open-url
  /composition/layers/{layer-index}/clips/{clip-index}/openfile:
    parameters:
    - description: Layer index to retrieve (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Clip index to retrieve (1-based)
      in: path
      name: clip-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      deprecated: true
      description: Loads file into clip, will retain settings as much as possible
      operationId: clip_openfile
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        description: 'The path to the file, in URL format. Right now only the `file`
          protocol is supported. Special characters

          are to be encoded using URL-encoding. As an example, to open a file with
          path `/Users/Resolume/file 1.mov`

          you''d use an URL like `file:///Users/Resolume/file%201.mov`. On Windows
          id''d be something like

          `file:///C:/Users/Resolume/file%201.mov`. Note that three forward slashes
          are needed after the `file:` part,

          even on Windows.

          '
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The given clip URL is invalid
        '404':
          content: {}
          description: The requested layer or clip does not exist
        '412':
          content:
            text/plain:
              schema:
                example: the clip cannot be changed currently
                type: string
          description: A precondition failed, the clip cannot be loaded
      summary: Loads file into clip by its position in the clip grid
      tags:
      - clip
      x-codegen-request-body-name: clip-file-url
  /composition/layers/{layer-index}/clips/{clip-index}/select:
    parameters:
    - description: Layer index to retrieve (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Clip index to retrieve (1-based)
      in: path
      name: clip-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Select the clip
      operationId: clip_select
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer or clip does not exist
      summary: Select the clip by its position in the clip grid
      tags:
      - clip
  /composition/layers/{layer-index}/clips/{clip-index}/thumbnail:
    delete:
      description: Undo any custom thumbnail selection and revert to the auto-generated
        thumbnail
      operationId: revert_clip_thumbnail_by_position
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested clip does not exist
        '412':
          content:
            text/plain:
              schema:
                example: the clip cannot be changed currently
                type: string
          description: A precondition failed, i.e. the composition is locked
      summary: Revert thumbnail to default for the specified clip
      tags:
      - clip
    get:
      description: Finds the clip at the given position in the grid and retrieves
        the latest thumbnail
      operationId: list_clip_thumbnail_by_position
      responses:
        '200':
          content:
            image/png:
              schema:
                format: binary
                type: string
          description: OK
        '404':
          content: {}
          description: The requested layer or clip does not exist
      summary: Retrieve the latest thumbnail belonging to the specified clip
      tags:
      - clip
    parameters:
    - description: Layer index to retrieve (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Clip index to retrieve (1-based)
      in: path
      name: clip-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Finds the clip at the given position in the grid and sets the thumbnail
      operationId: set_clip_thumbnail_by_position
      requestBody:
        content:
          multipart/form-data:
            encoding:
              file:
                contentType: image/png, image/jpeg, image/gif
            schema:
              properties:
                file:
                  description: The image data to set as thumbnail
                  format: binary
                  type: string
              type: object
          text/plain:
            examples:
              mac-open-file:
                value: file:///Users/Resolume/thumbnail%201.gif
              open-video-source:
                value: source:///video/Checkered
              open-video-source-preset:
                value: source:///video/Checkered/12345
              windows-open-file:
                value: file:///C:/Users/Resolume/thumbnail%201.png
              windows-open-unc:
                value: file://nas-hostname/Resolume/thumbnail%201.jpg
            schema:
              type: string
        description: 'Either the path to a file to load, or an uploaded file. If using
          a file path, it must be in URL format.

          Right now only the `file` protocol is supported. Special characters are
          to be encoded using URL-encoding.

          As an example, to open a thumbnail with path `/Users/Resolume/thumbnail
          1.png` you''d use an URL like

          `file:///Users/Resolume/thumbnail%201.png`. On Windows id''d be something
          like

          `file:///C:/Users/Resolume/thumbnail%201.png`. Note that three forward slashes
          are needed after the `file:`

          part, even on Windows. The thumbnail file must be in gif, png or jpg format.

          '
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The given clip URL is invalid
        '404':
          content: {}
          description: The requested clip does not exist
        '412':
          content:
            text/plain:
              schema:
                example: the clip cannot be changed currently
                type: string
          description: A precondition failed, the thumbnail cannot be loaded
      summary: Set a custom thumbnail for the specified clip
      tags:
      - clip
      x-codegen-request-body-name: clip-file-thumbnail
  /composition/layers/{layer-index}/clips/{clip-index}/thumbnail/{last-updated}:
    get:
      description: Finds the clip at the given position in the grid and retrieves
        the thumbnail if the thumbnail was last updated at the given timestamp
      operationId: get_clip_thumbnail_by_position_and_timestamp
      responses:
        '200':
          content:
            image/png:
              schema:
                format: binary
                type: string
          description: OK
        '404':
          content: {}
          description: The requested layer or clip does not exist, or the timestamp
            does not match last update
      summary: Retrieve the latest thumbnail belonging to the specified clip
      tags:
      - clip
    parameters:
    - description: Layer index to retrieve (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Clip index to retrieve (1-based)
      in: path
      name: clip-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Last updated timestamp for the clip thumbnail. If given, must match
        the timestamp of the current thumbnail.
      in: path
      name: last-updated
      required: true
      schema:
        format: int64
        type: integer
  /composition/layers/{layer-index}/clips/{clip-index}/{parameter}/reset:
    parameters:
    - description: Layer index to retrieve (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Clip index to retrieve (1-based)
      in: path
      name: clip-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Name of the parameter to reset
      in: path
      name: parameter
      required: true
      schema:
        type: string
    post:
      description: This resets a parameter on the indexed clip to default. If a JSON
        body is given and 'resetanimation' is set to true, animations are also reset.
      operationId: reset_clip_param
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        description: Parameter reset options, whether to also reset animations
        required: false
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The given layer, clip or parameter does not exist
      summary: Reset a parameter in a clip to its default value.
      tags:
      - clip
  /composition/layers/{layer-index}/duplicate:
    parameters:
    - description: Layer index to use (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Take the given layer and make a copy of it. All properties will
        be the same, except for the unique identifiers. The new layer is inserted
        into the composition below the existing one.
      operationId: composition_duplicate_layer
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer does not exist
        '412':
          content: {}
          description: A precondition failed, e.g. the composition is locked
      summary: Duplicate the given layer
      tags:
      - layer
  /composition/layers/{layer-index}/effects/video/add:
    parameters:
    - description: Layer index to use (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Add an effect to the layer at the specified index
      operationId: add_layer_effect
      requestBody:
        content:
          text/plain:
            examples:
              blow:
                value: effect:///video/Blow
              blow-solid:
                value: effect:///video/Blow/Solid
            schema:
              type: string
        description: The effect to add to the layer
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: The requested layer does not exit
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Add an effect to a layer by index
      tags:
      - layer
      x-codegen-request-body-name: layer-add-effect
  /composition/layers/{layer-index}/effects/video/add/{offset}:
    parameters:
    - description: Layer index to use (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    - description: The offset at which to insert the new effect
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Add an effect to the layer at the specified index
      operationId: layer_add_effect_offset
      requestBody:
        content:
          text/plain:
            examples:
              blow:
                value: effect:///video/Blow
              blow-solid:
                value: effect:///video/Blow/Solid
            schema:
              type: string
        description: The effect to add to the layer
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification or incorrect offset
        '404':
          content: {}
          description: The requested layer does not exit
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Add an effect to a layer by index, at the given offset
      tags:
      - layer
      x-codegen-request-body-name: layer-add-effect-offset
  /composition/layers/{layer-index}/effects/video/move:
    parameters:
    - description: Layer index to use (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Take an existing effect instance, and move it to the end of the
        layer
      operationId: move_effect_layer
      requestBody:
        content:
          text/plain:
            examples:
              clip-effect:
                value: /composition/layers/1/clips/5/effects/video/2
              clip-effect-by-id:
                value: /composition/clips/by-id/1658311744128/effects/video/5
              composition-effect:
                value: /composition/effects/video/3
              effect-by-id:
                value: effects/by-id/1658311809911
              layer-effect:
                value: /composition/layers/1/effects/video/2
              layer-effect-by-id:
                value: /composition/layers/by-id/1658311521181/effects/video/1
              layer-group-effect:
                value: /composition/layergroups/2/effects/video/1
              layer-group-effect-by-id:
                value: /composition/layergroups/by-id/1658311522986/effects/video/7
            schema:
              type: string
        description: The effect instance to move
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: The requested layer does not exist
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Move an effect to the end of the layer
      tags:
      - layer
      x-codegen-request-body-name: effect-instantiation-uri
  /composition/layers/{layer-index}/effects/video/move/{offset}:
    parameters:
    - description: Layer index to use (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    - description: The offset at which to insert the effect
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Take an existing effect instance, and move it to the given offset
      operationId: move_effect_layer_offset
      requestBody:
        content:
          text/plain:
            examples:
              clip-effect:
                value: /composition/layers/1/clips/5/effects/video/2
              clip-effect-by-id:
                value: /composition/clips/by-id/1658311744128/effects/video/5
              composition-effect:
                value: /composition/effects/video/3
              effect-by-id:
                value: effects/by-id/1658311809911
              layer-effect:
                value: /composition/layers/1/effects/video/2
              layer-effect-by-id:
                value: /composition/layers/by-id/1658311521181/effects/video/1
              layer-group-effect:
                value: /composition/layergroups/2/effects/video/1
              layer-group-effect-by-id:
                value: /composition/layergroups/by-id/1658311522986/effects/video/7
            schema:
              type: string
        description: The effect instance to move
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '404':
          content: {}
          description: The requested layer does not exist
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Move an effect to the end of the layer
      tags:
      - layer
      x-codegen-request-body-name: effect-instantiation-uri
  /composition/layers/{layer-index}/effects/video/{effect-index}/set-display-name:
    parameters:
    - description: Layer index to use (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    - description: The index of the video effect within the layer
      in: path
      name: effect-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Change the display name of the effect with the given offset in
        the layer
      operationId: video_effect_set_display_name_layer
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        description: The new display name for the effect
      responses:
        '204':
          description: OK
        '400':
          description: Invalid effect or preset specification
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Change the display name of an effect
      tags:
      - layer
      - effects
      x-codegen-request-body-name: effect-display-name
  /composition/layers/{layer-index}/effects/video/{offset}:
    delete:
      description: Remove an effect from a layer
      operationId: delete_layer_effect
      responses:
        '204':
          description: OK
        '404':
          description: No effect found at the given offset or the layer does not exist
        '412':
          description: A precondition failed, e.g. the composition is locked
      summary: Remove an effect from a layer
      tags:
      - layer
    parameters:
    - description: Layer index to use (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    - description: The offset of the effect to remove
      in: path
      name: offset
      required: true
      schema:
        format: int64
        type: integer
  /composition/layers/{layer-index}/select:
    parameters:
    - description: Layer index to select (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Select the layer at the given index
      operationId: layer_select
      responses:
        '204':
          description: OK
        '404':
          content: {}
          description: The requested layer does not exist
      summary: Select the layer by index
      tags:
      - layer
  /composition/layers/{layer-index}/{parameter}/reset:
    parameters:
    - description: Layer index to reset param on (1-based)
      in: path
      name: layer-index
      required: true
      schema:
        format: int64
        type: integer
    - description: Name of the parameter to reset
      in: path
      name: parameter
      required: true
      schema:
        type: string
    post:
      description: This resets a parameter on the indexed layer to default. If a JSON
        body is given and 'resetanimation' is set to true, animations are also reset.
      operationId: reset_layer_param
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        description: Parameter reset options, whether to also reset animations
        required: false
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The given layer or parameter does not exist
      summary: Reset a parameter in a layer to its default value.
      tags:
      - layer
  /composition/thumbnail/dummy:
    get:
      description: This retrieves the dummy thumbnail that is also used for clips
        that do not yet have a thumbnail. This is a convenient endpoint for clips
        when you already know they will not have a clip attached. Clips without thumbnail
        will have their `last_update` property set to "0". This call always returns
        the exact same result and it may be cached indefinitely.
      operationId: list_dummy_thumbnail
      responses:
        '200':
          content:
            image/png:
              schema:
                format: binary
                type: string
          description: OK
      summary: Explicitly retrieve the dummy thumbnails used for clips without a thumbnail
      tags:
      - clip
  /composition/{parameter}/reset:
    parameters:
    - description: Name of the parameter to reset
      in: path
      name: parameter
      required: true
      schema:
        type: string
    post:
      description: This resets a parameter on the main composition to default. If
        a JSON body is given and 'resetanimation' is set to true, animations are also
        reset.
      operationId: reset_composition_param
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameter'
        description: Parameter reset options, whether to also reset animations
        required: false
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The given parameter does not exist
      summary: Reset a parameter in the composition to its default value.
      tags:
      - composition
  /effects:
    get:
      description: Retrieve all effects available for using on clips, layer(group)s
        and the composition
      operationId: get_effects
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Effects'
          description: OK
      summary: Retrieve available effects for clips
      tags:
      - effects
  /parameter/by-id/{parameter-id}:
    get:
      description: Given the unique id, get all properties for a single parameter
      operationId: get_parameter_by_id
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/StringParameter'
                - $ref: '#/components/schemas/TextParameter'
                - $ref: '#/components/schemas/BooleanParameter'
                - $ref: '#/components/schemas/IntegerParameter'
                - $ref: '#/components/schemas/ColorParameter'
                - $ref: '#/components/schemas/RangeParameter'
                - $ref: '#/components/schemas/ChoiceParameter'
          description: OK
        '404':
          content: {}
          description: The given parameter ID is invalid.
      summary: Retrieve a parameter given its unique id
      tags:
      - composition
    parameters:
    - description: The unique id of the parameter to work with
      in: path
      name: parameter-id
      required: true
      schema:
        format: int64
        type: integer
    put:
      description: Given the unique id, update a single parameter
      operationId: set_parameter_by_id
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/StringParameter'
              - $ref: '#/components/schemas/TextParameter'
              - $ref: '#/components/schemas/BooleanParameter'
              - $ref: '#/components/schemas/IntegerParameter'
              - $ref: '#/components/schemas/ColorParameter'
              - $ref: '#/components/schemas/RangeParameter'
              - $ref: '#/components/schemas/ChoiceParameter'
        description: The parameter properties to set
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The given parameter ID is invalid.
      summary: Update a parameter given its unique id
      tags:
      - composition
  /parameter/by-id/{parameter-id}/reset:
    parameters:
    - description: The unique id of the parameter to work with
      in: path
      name: parameter-id
      required: true
      schema:
        format: int64
        type: integer
    post:
      description: Reset the parameter with the matching unique id
      operationId: reset_parameter_by_id
      requestBody:
        content:
          application/json:
            schema:
              properties:
                resetanimation:
                  description: Whether or not to also reset the animation
                  type: boolean
              type: object
        description: Options used for resetting the parameter, e.g. whether to reset
          animation
      responses:
        '204':
          description: OK
        '400':
          content: {}
          description: The input JSON cannot be deserialized or contains incompatible
            data
        '404':
          content: {}
          description: The given parameter ID is invalid.
      summary: Reset a parameter
      tags:
      - composition
  /product:
    get:
      description: This contains the product name and version information
      operationId: get_product
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInfo'
          description: OK
      summary: Retrieve product information
      tags:
      - api
  /sources:
    get:
      description: Retrieve all sources available to generate clips
      operationId: get_sources
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sources'
          description: OK
      summary: Retrieve available sources for clips
      tags:
      - sources
penapi: 3.0.1
servers:
- url: /api/v1
tags:
- description: Retrieve information about the API itself
  name: api
- description: Retrieve information on the available sources
  name: sources
- description: Retrieve information on the available effects
  name: effects
- description: Retrieve and update all composition properties
  name: composition
- description: Retrieve and update column properties
  name: column
- description: Retrieve and update layer properties and the clips they contain
  name: layer
- description: Retrieve and update layer group properties and the layers they contain
  name: layergroup
- description: Retrieve and update deck properties
  name: deck
- description: Retrieve and update properties for clips and their effects
  name: clip
